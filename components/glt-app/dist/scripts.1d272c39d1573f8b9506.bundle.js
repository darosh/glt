webpackJsonp([2,5],{3:function(e,n,t){t("FWIU"),t("Dy34"),t("rByv"),t("tLGE"),e.exports=t("YeKH")},"4RHH":function(e,n){e.exports='!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports):"function"==typeof define&&define.amd?define(["exports"],a):a(e.glt=e.glt||{})}(this,function(e){"use strict";var a=[{title:"Marble",data:[["SinXY"],["Gain",.19],["Warp",8,2.2,{data:[["MultiFractal",1.6,2,3,5.28,.8],["Scale",[-2.4,1.7]]]},{data:[["MultiFractal",1.8,2,2.7,60.8],["Translate",[10,-.4]],["Scale",[-2.4,1.7]]]}],["Translate",[1,1]],["Scale",[66,.57]],["CosPalette",[.5,.5,.5],[.38,.52,.59],[.36,.33,.27],[.56,.57,.69]]]},{title:"Tiles #1",data:[["SinXY"],["Gain"],["Warp",1,1,{data:[["MultiFractal"],["Scale",[6,4]]]},{data:[["MultiFractal"],["Scale",[6,4]],["Translate",[24,24]]]}],["Translate",[1,1]],["Scale",[16,16]],["CosPalette",[.5,.5,.5],[.7,.8,.2],[.23,.17,.28],[.71,.69,.33]]]},{title:"Tiles #2",data:[["SinXY"],["Gain"],["Warp",1,1,{data:[["MultiFractal"],["Scale",[6,4]]]},{data:[["MultiFractal"],["Scale",[6,4]],["Translate",[24,24]]]}],["Translate",[1.5,1.5]],["Scale",[24,24]]]},{title:"Abstract #1",data:[["SinXY"],["Warp",2.2,1,{data:[["MultiFractal"],["Scale",[10,-4.2]]]},{data:[["MultiFractal"],["Translate",[24,24]],["Scale",[-2.4,1.7]]]}],["Translate",[1,1]],["Scale",[66,.57]],["Gain",.19],["CosPalette",[.5,.5,.5],[.38,.52,.59],[.36,.33,.27],[.56,.57,.69]]]},{title:"Abstract #2",data:[["FBm",.48,5.37,3.12,6.51],["CosPalette",[.97,.03,.58],[.7,.85,.28],[.4,.9,.65],[.15,.84,.56]]]},{title:"Abstract #3",data:[["BlendSubtract",{data:[["WorleyF1",.52,1],["Scale",[-2.09,-37.81]],["Rotate",36.21]]},{data:[["SinY"],["Scale",[-126.41,37.04]]]},.72],["Tint",[.77,.33,.05]],["BlendOverlay",.9,"RidgedMultiFractal",3.58,.7,1.24,4.96,-1.97,2.25],["Tint",[.79,.92,.76]],["Bias",.9],["Rotate",24.62],["Tile",[125.95,49.88],0,0]]},{title:"Waves",data:[["SimplexNoise"],["Scale",[1,8]],["Normalize"],["Distort",.04,{data:[["SimplexNoise"]]}],["Scale",[.5,.8]],["CosPalette",[.5,.5,.5],[.5,.5,.5],[2,1,0],[.5,.2,.25]]]},{title:"Electricity",data:[["RidgedMultiFractal",.73,2.37,1.76,5.84,1.2,1.73],["Tint",[.08,.64,.92]]]},{title:"Ink",data:[["RidgedMultiFractal",{data:[["Y"],["Abs"]]},1.84,.6,5.98,1.05,2.55],["Rotate",235],["Scale",[1.1,1.1]]]},{title:"Worley + twirl",data:[["WorleyF1",1,.59],["Invert"],["Twirl",3,2.29,[0,0]],["CosPalette",[.13,.69,.74],[.08,.49,.71],[.13,.73,.62],[.76,.12,.21]]]},{title:"Palette #1",data:[["X"],["Normalize"],["CosPalette",[.84,.8,.66],[.13,.24,.25],[.44,.5,.59],[.8,.13,.23]]]},{title:"Palette #2",data:[["X"],["Normalize"],["CosPalette",[.7,.5,.25],[.72,.4,.24],[.28,.76,.44],[.68,.45,.92]]]},{title:"Palette #3",data:[["X"],["Normalize"],["CosPalette",[.44,.21,.74],[.17,.34,.71],[.53,.72,.22],[.7,.58,.71]]]},{title:"Palette #4",data:[["X"],["Normalize"],["CosPalette",[.73,.62,.13],[.42,.2,.34],[.59,.85,.56],[.58,.63,.73]]]}],t=[{title:"Minimal",data:[["PerlinNoise"]]},{title:"Modified",data:[["PerlinNoise"],["Abs"],["Scale",[4,2]]]},{title:"Normalized",data:[["PerlinNoise"],["Normalize"],["Scale",[4,4]]]},{title:"Green",data:[["PerlinNoise"],["Normalize"],["Scale",[12,12]],["Tint",[0,1,0]]]},{title:"Blend",data:[["PerlinNoise"],["Normalize"],["Scale",[4,4]],["Tint",[1,0,0]],["BlendAdd","PerlinNoise"],["Normalize"],["Scale",[12,12]],["Tint",[0,1,0]]]},{title:"1.0 blend",data:[["PerlinNoise"],["Normalize"],["Scale",[4,4]],["Tint",[1,0,0]],["BlendAdd",1,"PerlinNoise"],["Normalize"],["Scale",[12,12]],["Tint",[0,1,0]]]},{title:"0.75 blend",data:[["PerlinNoise"],["Normalize"],["Scale",[4,4]],["Tint",[1,0,0]],["BlendAdd",.75,"PerlinNoise"],["Normalize"],["Scale",[12,12]],["Tint",[0,1,0]]]},{title:"0.5 blend",data:[["PerlinNoise"],["Normalize"],["Scale",[4,4]],["Tint",[1,0,0]],["BlendAdd",.5,"PerlinNoise"],["Normalize"],["Scale",[12,12]],["Tint",[0,1,0]]]},{title:"0.25 blend",data:[["PerlinNoise"],["Normalize"],["Scale",[4,4]],["Tint",[1,0,0]],["BlendAdd",.25,"PerlinNoise"],["Normalize"],["Scale",[12,12]],["Tint",[0,1,0]]]},{title:"Red",data:[["PerlinNoise"],["Normalize"],["Scale",[4,4]],["Tint",[1,0,0]]]},{title:"X",data:[["X"]]},{title:"X normalized",data:[["X"],["Normalize"]]},{title:"Palette",data:[["X"],["Normalize"],["CosPalette",[.8,.4,0],[.5,.9,0],[.9,.8,.7],[0,.1,.3]]]},{title:"Noise",data:[["PerlinNoise"],["Abs"],["Scale",[4,4]]]},{title:"Noise + palette",data:[["PerlinNoise"],["Abs"],["CosPalette",[.8,.4,0],[.5,.9,0],[.9,.8,.7],[0,.1,.3]],["Scale",[4,4]]]},{title:"Checker",data:[["Checker"]]},{title:"Rotate",data:[["Checker"],["Rotate",45]]},{title:"Translate",data:[["Checker"],["Translate",[.25,.25]]]},{title:"Translate + rotate",data:[["Checker"],["Translate",[.25,.25]],["Rotate",45]]},{title:"Rotate + translate",data:[["Checker"],["Rotate",45],["Translate",[.25,.25]]]},{title:"SinX",data:[["SinX"],["Scale",[16,16]]]},{title:"Distort",data:[["SinX"],["Distort",8,{data:[["SinY"],["Scale",[16,16]]]}],["Scale",[16,16]]]},{title:"SinXY",data:[["SinXY"],["Scale",[10,10]]]},{title:"SinXY + sin",data:[["SinXY"],["Denormalize"],["Multiply",24],["Sin"],["Normalize"],["Scale",[10,10]]]},{title:"SinXY + abs",data:[["SinXY"],["Denormalize"],["Abs"],["Denormalize"],["Scale",[10,10]]]},{title:"Abs + abs",data:[["SinXY"],["Denormalize"],["Abs"],["Denormalize"],["Abs"],["Scale",[10,10]]]},{title:"WorleyF1",data:[["WorleyF1"],["Scale",[8,8]]]},{title:"Invert + bias",data:[["WorleyF1"],["Invert"],["Bias"],["Scale",[8,8]]]},{title:"Invert + posterize",data:[["WorleyF1"],["Invert"],["Posterize"],["Scale",[2,2]]]},{title:"Distort by worley",data:[["WorleyF1"],["Distort",8,{data:[["WorleyF1"],["Scale",[2,2]]]}],["Invert"],["Bias",.6],["Scale",[4,4]]]},{title:"Distort",data:[["SinX"],["Distort",8,{data:[["SinY"],["Scale",[24,24]],["Posterize",2,.9]]}],["Scale",[16,16]]]},{title:"SinX + twirl",data:[["SinX"],["Twirl"]]},{title:"Worley + twirl",data:[["WorleyF1"],["Invert"],["Twirl",8,24]]},{title:"Colorized",data:[["SinXY"],["CosPalette"],["Scale",[16,16]]]},{title:"Desaturated",data:[["SinXY"],["CosPalette"],["Grayscale"],["Scale",[16,16]]]},{title:"Pixelate",data:[["SinXY"],["CosPalette"],["Scale",[16,16]],["Pixelate",32]]},{title:"Pixelate more",data:[["SinXY"],["CosPalette"],["Scale",[16,16]],["Pixelate",16]]},{title:"RGB",data:[["RGB",{data:[["SimplexNoise"],["Normalize"]]},{data:[["SimplexNoise"],["Normalize"],["Translate",[.2,.2]]]},{data:[["SimplexNoise"],["Normalize"],["Translate",[-.2,.2]]]}],["Gain",.4],["Scale",[2,2]]]},{title:"RGB",data:[["RGB",{data:[["WorleyF1"],["Invert"]]},{data:[["WorleyF1"],["Invert"],["Translate",[.14,.2]]]},{data:[["WorleyF1"],["Invert"],["Translate",[-.14,.2]]]}],["Gain",.5],["Scale",[2,2]]]},{title:"RGB",data:[["RGB",{data:[["WorleyF1"],["Invert"]]},{data:[["WorleyF1"],["Invert"],["Translate",[.28,.4]]]},{data:[["WorleyF1"],["Invert"],["Translate",[-.28,.4]]]}],["Gain",.1],["Scale",[2,2]]]},{title:"HSV",data:[["HSV",{data:[["SimplexNoise"],["Normalize"],["Scale",[.1,.1]]]},{data:[["WorleyF1"],["Invert"],["Add",-.32],["Gain",.02]]},{data:[["WorleyF1"],["Invert"],["Add",-.24],["Gain",.02]]}],["Scale",[2.5,2.5]]]}];e.samplesDemo=a,e.samplesTest=t,Object.defineProperty(e,"__esModule",{value:!0})});\n'},"8GmU":function(e,n){e.exports="(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.glt = global.glt || {})));\n}(this, (function (exports) { 'use strict';\n\nvar gltg = \"\\n#define GLSLIFY 1\\n\\nfloat blendColorDodge(float base, float blend) {\\n return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);\\n}\\nfloat blendColorDodge(float base, float blend, float opacity) {\\n return mix(base, blendColorDodge(base, blend), opacity);\\n}\\nvec3 blendColorDodge(vec3 base, vec3 blend) {\\n return vec3(blendColorDodge(base.r, blend.r), blendColorDodge(base.g, blend.g), blendColorDodge(base.b, blend.b));\\n}\\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendColorDodge(base, blend), opacity);\\n}\\nfloat blendColorBurn(float base, float blend) {\\n return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);\\n}\\nfloat blendColorBurn(float base, float blend, float opacity) {\\n return mix(base, blendColorBurn(base, blend), opacity);\\n}\\nvec3 blendColorBurn(vec3 base, vec3 blend) {\\n return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g), blendColorBurn(base.b, blend.b));\\n}\\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendColorBurn(base, blend), opacity);\\n}\\nfloat blendVividLight(float base, float blend) {\\n return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend)) : blendColorDodge(base, (2.0 * (blend - 0.5)));\\n}\\nfloat blendVividLight(float base, float blend, float opacity) {\\n return mix(base, blendVividLight(base, blend), opacity);\\n}\\nvec3 blendVividLight(vec3 base, vec3 blend) {\\n return vec3(blendVividLight(base.r, blend.r), blendVividLight(base.g, blend.g), blendVividLight(base.b, blend.b));\\n}\\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendVividLight(base, blend), opacity);\\n}\\nfloat blendHardMix(float base, float blend) {\\n return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;\\n}\\nfloat blendHardMix(float base, float blend, float opacity) {\\n return mix(base, blendHardMix(base, blend), opacity);\\n}\\nvec3 blendHardMix(vec3 base, vec3 blend) {\\n return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g), blendHardMix(base.b, blend.b));\\n}\\nvec3 blendHardMix(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendHardMix(base, blend), opacity);\\n}\\nfloat blendLinearDodge(float base, float blend) {\\n return min(base + blend, 1.0);\\n}\\nfloat blendLinearDodge(float base, float blend, float opacity) {\\n return mix(base, blendLinearDodge(base, blend), opacity);\\n}\\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\\n return min(base + blend, vec3(1.0));\\n}\\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendLinearDodge(base, blend), opacity);\\n}\\nfloat blendLinearBurn(float base, float blend) {\\n return max(base + blend - 1.0, 0.0);\\n}\\nfloat blendLinearBurn(float base, float blend, float opacity) {\\n return mix(base, blendLinearBurn(base, blend), opacity);\\n}\\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\\n return max(base + blend - vec3(1.0), vec3(0.0));\\n}\\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendLinearBurn(base, blend), opacity);\\n}\\nfloat blendLinearLight(float base, float blend) {\\n return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend)) : blendLinearDodge(base, (2.0 * (blend - 0.5)));\\n}\\nfloat blendLinearLight(float base, float blend, float opacity) {\\n return mix(base, blendLinearLight(base, blend), opacity);\\n}\\nvec3 blendLinearLight(vec3 base, vec3 blend) {\\n return vec3(blendLinearLight(base.r, blend.r), blendLinearLight(base.g, blend.g), blendLinearLight(base.b, blend.b));\\n}\\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendLinearLight(base, blend), opacity);\\n}\\nfloat blendLighten(float base, float blend) {\\n return max(blend, base);\\n}\\nfloat blendLighten(float base, float blend, float opacity) {\\n return mix(base, blendLighten(base, blend), opacity);\\n}\\nvec3 blendLighten(vec3 base, vec3 blend) {\\n return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g), blendLighten(base.b, blend.b));\\n}\\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendLighten(base, blend), opacity);\\n}\\nfloat blendDarken(float base, float blend) {\\n return min(blend, base);\\n}\\nfloat blendDarken(float base, float blend, float opacity) {\\n return mix(base, blendDarken(base, blend), opacity);\\n}\\nvec3 blendDarken(vec3 base, vec3 blend) {\\n return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g), blendDarken(base.b, blend.b));\\n}\\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendDarken(base, blend), opacity);\\n}\\nfloat blendPinLight(float base, float blend) {\\n return (blend < 0.5) ? blendDarken(base, (2.0 * blend)) : blendLighten(base, (2.0 * (blend - 0.5)));\\n}\\nfloat blendPinLight(float base, float blend, float opacity) {\\n return mix(base, blendPinLight(base, blend), opacity);\\n}\\nvec3 blendPinLight(vec3 base, vec3 blend) {\\n return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g), blendPinLight(base.b, blend.b));\\n}\\nvec3 blendPinLight(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendPinLight(base, blend), opacity);\\n}\\nfloat blendReflect(float base, float blend) {\\n return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);\\n}\\nfloat blendReflect(float base, float blend, float opacity) {\\n return mix(base, blendReflect(base, blend), opacity);\\n}\\nvec3 blendReflect(vec3 base, vec3 blend) {\\n return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g), blendReflect(base.b, blend.b));\\n}\\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendReflect(base, blend), opacity);\\n}\\nfloat blendGlow(float base, float blend) {\\n return blendReflect(blend, base);\\n}\\nfloat blendGlow(float base, float blend, float opacity) {\\n return mix(base, blendReflect(blend, base), opacity);\\n}\\nvec3 blendGlow(vec3 base, vec3 blend) {\\n return blendReflect(blend, base);\\n}\\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendGlow(base, blend), opacity);\\n}\\nfloat blendOverlay(float base, float blend) {\\n return base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));\\n}\\nfloat blendOverlay(float base, float blend, float opacity) {\\n return mix(base, blendOverlay(base, blend), opacity);\\n}\\nvec3 blendOverlay(vec3 base, vec3 blend) {\\n return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g), blendOverlay(base.b, blend.b));\\n}\\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendOverlay(base, blend), opacity);\\n}\\nfloat blendHardLight(float base, float blend) {\\n return blendOverlay(blend, base);\\n}\\nfloat blendHardLight(float base, float blend, float opacity) {\\n return mix(base, blendHardLight(base, blend), opacity);\\n}\\nvec3 blendHardLight(vec3 base, vec3 blend) {\\n return blendOverlay(blend, base);\\n}\\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendHardLight(base, blend), opacity);\\n}\\nfloat blendPhoenix(float base, float blend) {\\n return min(base, blend) - max(base, blend) + 1.0;\\n}\\nfloat blendPhoenix(float base, float blend, float opacity) {\\n return mix(base, blendPhoenix(base, blend), opacity);\\n}\\nvec3 blendPhoenix(vec3 base, vec3 blend) {\\n return min(base, blend) - max(base, blend) + vec3(1.0);\\n}\\nvec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendPhoenix(base, blend), opacity);\\n}\\nfloat blendNegation(float base, float blend) {\\n return 1.0 - abs(1.0 - base - blend);\\n}\\nvec3 blendNegation(vec3 base, vec3 blend) {\\n return vec3(1.0) - abs(vec3(1.0) - base - blend);\\n}\\nfloat blendNegation(float base, float blend, float opacity) {\\n return mix(base, blendNegation(base, blend), opacity);\\n}\\nvec3 blendNegation(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendNegation(base, blend), opacity);\\n}\\nfloat blendMultiply(float base, float blend) {\\n return base * blend;\\n}\\nfloat blendMultiply(float base, float blend, float opacity) {\\n return mix(base, blendMultiply(base, blend), opacity);\\n}\\nvec3 blendMultiply(vec3 base, vec3 blend) {\\n return base * blend;\\n}\\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendMultiply(base, blend), opacity);\\n}\\nfloat blendAverage(float base, float blend) {\\n return (base + blend) / 2.0;\\n}\\nfloat blendAverage(float base, float blend, float opacity) {\\n return mix(base, blendAverage(base, blend), opacity);\\n}\\nvec3 blendAverage(vec3 base, vec3 blend) {\\n return (base + blend) / 2.0;\\n}\\nvec3 blendAverage(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendAverage(base, blend), opacity);\\n}\\nfloat blendScreen(float base, float blend) {\\n return 1.0 - ((1.0 - base) * (1.0 - blend));\\n}\\nfloat blendScreen(float base, float blend, float opacity) {\\n return mix(base, blendScreen(base, blend), opacity);\\n}\\nvec3 blendScreen(vec3 base, vec3 blend) {\\n return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g), blendScreen(base.b, blend.b));\\n}\\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendScreen(base, blend), opacity);\\n}\\nfloat blendSoftLight(float base, float blend) {\\n return (blend < 0.5) ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend)) : (sqrt(abs(base)) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\\n}\\nfloat blendSoftLight(float base, float blend, float opacity) {\\n return mix(base, blendSoftLight(base, blend), opacity);\\n}\\nvec3 blendSoftLight(vec3 base, vec3 blend) {\\n return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g), blendSoftLight(base.b, blend.b));\\n}\\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendSoftLight(base, blend), opacity);\\n}\\nfloat blendSubtract(float base, float blend) {\\n return max(base + blend - 1.0, 0.0);\\n}\\nfloat blendSubtract(float base, float blend, float opacity) {\\n return mix(base, blendSubtract(base, blend), opacity);\\n}\\nvec3 blendSubtract(vec3 base, vec3 blend) {\\n return max(base + blend - vec3(1.0), vec3(0.0));\\n}\\nvec3 blendSubtract(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendSubtract(base, blend), opacity);\\n}\\nfloat blendExclusion(float base, float blend) {\\n return base + blend - 2.0 * base * blend;\\n}\\nfloat blendExclusion(float base, float blend, float opacity) {\\n return mix(base, blendExclusion(base, blend), opacity);\\n}\\nvec3 blendExclusion(vec3 base, vec3 blend) {\\n return base + blend - 2.0 * base * blend;\\n}\\nvec3 blendExclusion(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendExclusion(base, blend), opacity);\\n}\\nfloat blendDifference(float base, float blend) {\\n return abs(base - blend);\\n}\\nfloat blendDifference(float base, float blend, float opacity) {\\n return mix(base, blendDifference(base, blend), opacity);\\n}\\nvec3 blendDifference(vec3 base, vec3 blend) {\\n return abs(base - blend);\\n}\\nvec3 blendDifference(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendDifference(base, blend), opacity);\\n}\\nfloat blendAdd(float base, float blend) {\\n return min(base + blend, 1.0);\\n}\\nfloat blendAdd(float base, float blend, float opacity) {\\n return mix(base, blendAdd(base, blend), opacity);\\n}\\nvec3 blendAdd(vec3 base, vec3 blend) {\\n return min(base + blend, vec3(1.0));\\n}\\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendAdd(base, blend), opacity);\\n}\\nfloat blendNormal(float base, float blend) {\\n return blend;\\n}\\nfloat blendNormal(float base, float blend, float opacity) {\\n return mix(base, blend, opacity);\\n}\\nvec3 blendNormal(vec3 base, vec3 blend) {\\n return blend;\\n}\\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\\n return mix(base, blendNormal(base, blend), opacity);\\n}\\nvec2 Distort(vec2 pos, float weight, float val) {\\n return pos + weight * val;\\n}\\nmat2 rotate(float rad) {\\n float c = cos(rad);\\n float s = sin(rad);\\n return mat2(c, s, -s, c);\\n}\\nvec2 Rotate(vec2 pos, float deg) {\\n return rotate(radians(deg)) * pos;\\n}\\nvec2 Scale(vec2 pos, vec2 scale) {\\n return pos * scale;\\n}\\nvec2 Translate(vec2 pos, vec2 shift) {\\n return pos + shift;\\n}\\nvec2 Pixelate(vec2 pos, float steps) {\\n return floor(pos * steps + 2. / steps) / steps;\\n}\\nvec2 Twirl(vec2 pos, float weight, float size, vec2 center) {\\n float dist = distance(pos, center);\\n if(dist < size) {\\n  dist = pow(abs(size - dist), 2.) / size;\\n  float angle = 6.28318530718 * (dist / (size / weight));\\n  return vec2((pos.x - center.x) * cos(angle) - (pos.y - pos.x) * sin(angle) + center.x + 0.5, (pos.y - center.y) * cos(angle) + (pos.x - pos.y) * sin(angle) + center.y + 0.5);\\n } else {\\n  return pos;\\n }\\n}\\nvec2 Tile(vec2 pos, vec2 size, float mirrorX, float mirrorY) {\\n vec2 n = pos * size;\\n return vec2(bool(mirrorX > .5) ? abs(n.x - floor(n.x) - 0.5) * 4. - 1. : (n.x - floor(n.x) - 0.5) * 2., bool(mirrorY > .5) ? abs(n.y - floor(n.y) - 0.5) * 4. - 1. : (n.y - floor(n.y) - 0.5) * 2.);\\n}\\nvec2 Warp(vec2 pos, float wx, float wy, float x, float y) {\\n return pos + vec2(wx * x, wy * y);\\n}\\nfloat checker(vec2 uv, float repeats) {\\n float cx = floor(repeats * uv.x);\\n float cy = floor(repeats * uv.y);\\n float result = mod(cx + cy, 2.0);\\n return sign(result);\\n}\\nvec3 mod289_1(vec3 x) {\\n return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec2 mod289_1(vec2 x) {\\n return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec3 permute_1(vec3 x) {\\n return mod289_1(((x * 34.0) + 1.0) * x);\\n}\\nfloat snoise(vec2 v) {\\n const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439);\\n vec2 i = floor(v + dot(v, C.yy));\\n vec2 x0 = v - i + dot(i, C.xx);\\n vec2 i1;\\n i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n vec4 x12 = x0.xyxy + C.xxzz;\\n x12.xy -= i1;\\n i = mod289_1(i);\\n vec3 p = permute_1(permute_1(i.y + vec3(0.0, i1.y, 1.0)) + i.x + vec3(0.0, i1.x, 1.0));\\n vec3 m = max(0.5 - vec3(dot(x0, x0), dot(x12.xy, x12.xy), dot(x12.zw, x12.zw)), 0.0);\\n m = m * m;\\n m = m * m;\\n vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n vec3 h = abs(x) - 0.5;\\n vec3 ox = floor(x + 0.5);\\n vec3 a0 = x - ox;\\n m *= 1.79284291400159 - 0.85373472095314 * (a0 * a0 + h * h);\\n vec3 g;\\n g.x = a0.x * x0.x + h.x * x0.y;\\n g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n return 130.0 * dot(m, g);\\n}\\nvec4 mod289_0(vec4 x) {\\n return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 permute_0(vec4 x) {\\n return mod289_0(((x * 34.0) + 1.0) * x);\\n}\\nvec4 taylorInvSqrt_0(vec4 r) {\\n return 1.79284291400159 - 0.85373472095314 * r;\\n}\\nvec2 fade_0(vec2 t) {\\n return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\\n}\\nfloat pnoise(vec2 P, vec2 rep) {\\n vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n Pi = mod(Pi, rep.xyxy);\\n Pi = mod289_0(Pi);\\n vec4 ix = Pi.xzxz;\\n vec4 iy = Pi.yyww;\\n vec4 fx = Pf.xzxz;\\n vec4 fy = Pf.yyww;\\n vec4 i = permute_0(permute_0(ix) + iy);\\n vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0;\\n vec4 gy_0 = abs(gx) - 0.5;\\n vec4 tx_0 = floor(gx + 0.5);\\n gx = gx - tx_0;\\n vec2 g00 = vec2(gx.x, gy_0.x);\\n vec2 g10 = vec2(gx.y, gy_0.y);\\n vec2 g01 = vec2(gx.z, gy_0.z);\\n vec2 g11 = vec2(gx.w, gy_0.w);\\n vec4 norm = taylorInvSqrt_0(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\\n g00 *= norm.x;\\n g01 *= norm.y;\\n g10 *= norm.z;\\n g11 *= norm.w;\\n float n00 = dot(g00, vec2(fx.x, fy.x));\\n float n10 = dot(g10, vec2(fx.y, fy.y));\\n float n01 = dot(g01, vec2(fx.z, fy.z));\\n float n11 = dot(g11, vec2(fx.w, fy.w));\\n vec2 fade_xy = fade_0(Pf.xy);\\n vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n return 2.3 * n_xy;\\n}\\nvec4 mod289_2(vec4 x) {\\n return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 permute_2(vec4 x) {\\n return mod289_2(((x * 34.0) + 1.0) * x);\\n}\\nvec4 taylorInvSqrt_1(vec4 r) {\\n return 1.79284291400159 - 0.85373472095314 * r;\\n}\\nvec2 fade_1(vec2 t) {\\n return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\\n}\\nfloat cnoise(vec2 P) {\\n vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n Pi = mod289_2(Pi);\\n vec4 ix = Pi.xzxz;\\n vec4 iy = Pi.yyww;\\n vec4 fx = Pf.xzxz;\\n vec4 fy = Pf.yyww;\\n vec4 i = permute_2(permute_2(ix) + iy);\\n vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0;\\n vec4 gy_1 = abs(gx) - 0.5;\\n vec4 tx_1 = floor(gx + 0.5);\\n gx = gx - tx_1;\\n vec2 g00 = vec2(gx.x, gy_1.x);\\n vec2 g10 = vec2(gx.y, gy_1.y);\\n vec2 g01 = vec2(gx.z, gy_1.z);\\n vec2 g11 = vec2(gx.w, gy_1.w);\\n vec4 norm = taylorInvSqrt_1(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\\n g00 *= norm.x;\\n g01 *= norm.y;\\n g10 *= norm.z;\\n g11 *= norm.w;\\n float n00 = dot(g00, vec2(fx.x, fy.x));\\n float n10 = dot(g10, vec2(fx.y, fy.y));\\n float n01 = dot(g01, vec2(fx.z, fy.z));\\n float n11 = dot(g11, vec2(fx.w, fy.w));\\n vec2 fade_xy = fade_1(Pf.xy);\\n vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n return 2.3 * n_xy;\\n}\\nfloat SinX(vec2 pos) {\\n return (sin(pos.x) + 1.) / 2.;\\n}\\nfloat SinY(vec2 pos) {\\n return (sin(pos.y) + 1.) / 2.;\\n}\\nfloat SinXY(vec2 pos) {\\n return (sin(pos.x) + sin(pos.y) + 2.) / 4.;\\n}\\nvec3 permute_3(vec3 x) {\\n return mod((34.0 * x + 1.0) * x, 289.0);\\n}\\nvec3 dist_0(vec3 x, vec3 y, bool manhattanDistance) {\\n return manhattanDistance ? abs(x) + abs(y) : (x * x + y * y);\\n}\\nvec2 worley(vec2 P, float jitter, bool manhattanDistance) {\\n float K = 0.142857142857;\\n float Ko = 0.428571428571;\\n vec2 Pi_0 = mod(floor(P), 289.0);\\n vec2 Pf = fract(P);\\n vec3 oi = vec3(-1.0, 0.0, 1.0);\\n vec3 of = vec3(-0.5, 0.5, 1.5);\\n vec3 px = permute_3(Pi_0.x + oi);\\n vec3 p = permute_3(px.x + Pi_0.y + oi);\\n vec3 ox = fract(p * K) - Ko;\\n vec3 oy = mod(floor(p * K), 7.0) * K - Ko;\\n vec3 dx = Pf.x + 0.5 + jitter * ox;\\n vec3 dy = Pf.y - of + jitter * oy;\\n vec3 d1 = dist_0(dx, dy, manhattanDistance);\\n p = permute_3(px.y + Pi_0.y + oi);\\n ox = fract(p * K) - Ko;\\n oy = mod(floor(p * K), 7.0) * K - Ko;\\n dx = Pf.x - 0.5 + jitter * ox;\\n dy = Pf.y - of + jitter * oy;\\n vec3 d2 = dist_0(dx, dy, manhattanDistance);\\n p = permute_3(px.z + Pi_0.y + oi);\\n ox = fract(p * K) - Ko;\\n oy = mod(floor(p * K), 7.0) * K - Ko;\\n dx = Pf.x - 1.5 + jitter * ox;\\n dy = Pf.y - of + jitter * oy;\\n vec3 d3 = dist_0(dx, dy, manhattanDistance);\\n vec3 d1a = min(d1, d2);\\n d2 = max(d1, d2);\\n d2 = min(d2, d3);\\n d1 = min(d1a, d2);\\n d2 = max(d1a, d2);\\n d1.xy = (d1.x < d1.y) ? d1.xy : d1.yx;\\n d1.xz = (d1.x < d1.z) ? d1.xz : d1.zx;\\n d1.yz = min(d1.yz, d2.yz);\\n d1.y = min(d1.y, d1.z);\\n d1.y = min(d1.y, d2.x);\\n return sqrt(d1.xy);\\n}\\nfloat WorleyF1(vec2 pos, float jitter, float manhattanDistance) {\\n return worley(pos, jitter, bool(manhattanDistance > .5)).x;\\n}\\nfloat WorleyF2(vec2 pos, float jitter, float manhattanDistance) {\\n return worley(pos, jitter, bool(manhattanDistance > .5)).y;\\n}\\nfloat WorleyF1F2(vec2 pos, float jitter, float manhattanDistance) {\\n vec2 w = worley(pos, jitter, bool(manhattanDistance > .5));\\n return (w.x + w.y) / 2.;\\n}\\nfloat WorleyF2F1(vec2 pos, float jitter, float manhattanDistance) {\\n vec2 w = worley(pos, jitter, bool(manhattanDistance));\\n return w.y - w.x;\\n}\\nfloat WorleyCrackle(vec2 pos, float jitter, float manhattanDistance, float multiply, float reduce, float offset) {\\n vec2 w = worley(pos, jitter, bool(manhattanDistance > .5));\\n return max(1., (w.y - w.x) * multiply) / reduce - offset;\\n}\\nfloat ridgedMultiFractal(vec2 point, float H, float lacunarity, float frequency, float octaves, float offset, float gain) {\\n float value = 1.0;\\n float signal = 0.0;\\n float pwHL = pow(abs(lacunarity), -H);\\n float pwr = pwHL;\\n float weight = 0.;\\n signal = snoise(point * frequency);\\n signal = offset - abs(signal);\\n signal *= signal;\\n value = signal * pwr;\\n weight = 1.0;\\n pwr *= pwHL;\\n for(int i = 1; i < 65535; i++) {\\n  point *= lacunarity;\\n  weight = clamp(signal * gain, 0., 1.);\\n  signal = snoise(point * frequency);\\n  signal = offset - abs(signal);\\n  signal *= signal;\\n  signal *= weight;\\n  value += signal * pwr;\\n  pwr *= pwHL;\\n  if(i == int(octaves) - 1)\\n   break;\\n  \\n }\\n return value;\\n}\\nfloat hybridMultiFractal(vec2 point, float H, float lacunarity, float frequency, float octaves, float offset) {\\n float value = 1.0;\\n float signal = 0.0;\\n float rmd = 0.0;\\n float pwHL = pow(abs(lacunarity), -H);\\n float pwr = pwHL;\\n float weight = 0.;\\n value = pwr * (snoise(point * frequency) + offset);\\n weight = value;\\n point *= lacunarity;\\n pwr *= pwHL;\\n for(int i = 1; i < 65535; i++) {\\n  weight = weight > 1. ? 1. : weight;\\n  signal = pwr * (snoise(point * frequency) + offset);\\n  value += weight * signal;\\n  weight *= signal;\\n  pwr *= pwHL;\\n  point *= lacunarity;\\n  if(i == int(octaves) - 1)\\n   break;\\n  \\n }\\n rmd = octaves - floor(octaves);\\n if(rmd != 0.0)\\n  value += (rmd * snoise(point * frequency) * pwr);\\n return value;\\n}\\nfloat fBmA(vec2 point, float H, float lacunarity, float frequency, float octaves) {\\n float value = 0.0;\\n float remainder = 0.0;\\n float pwrHL = pow(abs(lacunarity), -H);\\n float pwr = 1.0;\\n for(int i = 0; i < 65535; i++) {\\n  value += snoise(point * frequency) * pwr;\\n  pwr *= pwrHL;\\n  point *= lacunarity;\\n  if(i == int(octaves) - 1)\\n   break;\\n  \\n }\\n remainder = octaves - floor(octaves);\\n if(remainder != 0.0) {\\n  value += remainder * snoise(point * frequency) * pwr;\\n }\\n return value;\\n}\\nfloat heteroTerrainA(vec2 point, float H, float lacunarity, float frequency, float octaves, float offset) {\\n float value, increment, remainder;\\n float pwrHL = pow(abs(lacunarity), -H);\\n float pwr = pwrHL;\\n value = offset + snoise(point * frequency);\\n point *= lacunarity;\\n for(int i = 1; i < 65535; i++) {\\n  increment = (snoise(point * frequency) + offset) * pwr * value;\\n  value += increment;\\n  point *= lacunarity;\\n  if(i == int(octaves))\\n   break;\\n  \\n }\\n remainder = mod(octaves, floor(octaves));\\n if(remainder != 0.0) {\\n  increment = (snoise(point * frequency) + offset) * pwr * value;\\n  value += remainder * increment;\\n }\\n return value;\\n}\\nfloat multifractalA(vec2 point, float H, float lacunarity, float frequency, float octaves, float offset) {\\n float value = 1.0;\\n float rmd = 0.0;\\n float pwHL = pow(abs(lacunarity), -H);\\n float pwr = 1.0;\\n for(int i = 0; i < 65535; i++) {\\n  value *= pwr * snoise(point * frequency) + offset;\\n  pwr *= pwHL;\\n  point *= lacunarity;\\n  if(i == int(octaves) - 1)\\n   break;\\n  \\n }\\n rmd = octaves - floor(octaves);\\n if(rmd != 0.0)\\n  value += (rmd * snoise(point * frequency) * pwr);\\n return value;\\n}\\nvec3 HSV(float h, float s, float v) {\\n vec3 c = vec3(h, s, v);\\n vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nfloat Xor(vec2 pos) {\\n vec4 o = vec4(0.);\\n for(float i = 0.; i < 8.; ++i) {\\n  o.xy = ceil(mod(pos /= 2., 2.));\\n  o -= o - o.z - abs(o.y - o.x) * i / 32.;\\n }\\n return o.x;\\n}\\nfloat X(vec2 pos) {\\n return pos.x;\\n}\\nfloat Y(vec2 pos) {\\n return pos.y;\\n}\\nfloat Length(vec2 pos) {\\n return length(pos);\\n}\\nfloat Abs(float val) {\\n return abs(val);\\n}\\nvec3 Abs(vec3 val) {\\n return abs(val);\\n}\\nfloat Posterize(float val, float steps, float gamma) {\\n return pow(abs(floor(pow(abs(val), gamma) * steps) / steps), 1.0 / gamma);\\n}\\nvec3 Posterize(vec3 val, float steps, float gamma) {\\n return pow(abs(floor(pow(abs(val), vec3(gamma)) * steps) / steps), vec3(1.0 / gamma));\\n}\\nfloat Bias(float val, float bias) {\\n return (val / ((((1. / bias) - 2.) * (1. - val)) + 1.));\\n}\\nvec3 Bias(vec3 val, float bias) {\\n return (val / ((((1. / bias) - 2.) * (1. - val)) + 1.));\\n}\\nfloat bias_0(float val, float bias) {\\n return (val / ((((1. / bias) - 2.) * (1. - val)) + 1.));\\n}\\nfloat Gain(float val, float gain) {\\n if(val < 0.5) {\\n  return bias_0(val * 2., gain) / 2.;\\n } else {\\n  return bias_0(val * 2. - 1., 1. - gain) / 2. + 0.5;\\n }\\n}\\nvec3 Gain(vec3 val, float gain) {\\n return vec3(Gain(val.x, gain), Gain(val.y, gain), Gain(val.z, gain));\\n}\\nfloat Normalize(float val) {\\n return (val + 1.) / 2.;\\n}\\nvec3 Normalize(vec3 val) {\\n return (val + 1.) / 2.;\\n}\\nfloat Denormalize(float val) {\\n return (val - .5) * 2.;\\n}\\nvec3 Denormalize(vec3 val) {\\n return (val - .5) * 2.;\\n}\\nfloat Invert(float val) {\\n return 1. - val;\\n}\\nvec3 Invert(vec3 val) {\\n return 1. - val;\\n}\\nfloat Clamp(float val, float from, float to) {\\n return clamp(val, from, to);\\n}\\nvec3 Clamp(vec3 val, float from, float to) {\\n return clamp(val, from, to);\\n}\\nfloat Sin(float val) {\\n return sin(val);\\n}\\nvec3 Sin(vec3 val) {\\n return sin(val);\\n}\\nfloat Cos(float val) {\\n return cos(val);\\n}\\nvec3 Cos(vec3 val) {\\n return cos(val);\\n}\\nfloat Add(float val, float value) {\\n return val + value;\\n}\\nvec3 Add(vec3 val, float value) {\\n return val + value;\\n}\\nfloat Multiply(float val, float value) {\\n return val * value;\\n}\\nvec3 Multiply(vec3 val, float value) {\\n return val * value;\\n}\\nfloat SmoothStep(float val, float edge0, float edge1) {\\n return smoothstep(edge0, edge1, val);\\n}\\nvec3 SmoothStep(vec3 val, float edge0, float edge1) {\\n return smoothstep(edge0, edge1, val);\\n}\\nvec3 cosPalette(float t, vec3 a, vec3 b, vec3 c, vec3 d) {\\n return a + b * cos(6.28318 * (c * t + d));\\n}\\nvec3 Tint(float val, vec3 color) {\\n return val * color;\\n}\\nvec3 Tint(vec3 val, vec3 color) {\\n return val * color;\\n}\\nfloat Grayscale(vec3 color) {\\n return color.x * .2126 + color.y * .7152 + color.z * .0722;\\n}\";\n\nfunction isObject(obj) {\n    return obj instanceof Object && !(obj instanceof Array);\n}\n\nfunction each(obj, fnc) {\n    if (isObject(obj)) {\n        Object.keys(obj).forEach(function (key) {\n            return fnc(key, obj[key]);\n        });\n    }\n}\n\nvar blend = {\n    BlendHardMix: 'blendHardMix',\n    BlendVividLight: 'blendVividLight',\n    BlendLinearLight: 'blendLinearLight',\n    BlendPinLight: 'blendPinLight',\n    BlendGlow: 'blendGlow',\n    BlendHardLight: 'blendHardLight',\n    BlendPhoenix: 'blendPhoenix',\n    BlendOverlay: 'blendOverlay',\n    BlendNormal: 'blendNormal',\n    BlendNegation: 'blendNegation',\n    BlendMultiply: 'blendMultiply',\n    BlendReflect: 'blendReflect',\n    BlendAverage: 'blendAverage',\n    BlendLinearBurn: 'blendLinearBurn',\n    BlendLighten: 'blendLighten',\n    BlendScreen: 'blendScreen',\n    BlendSoftLight: 'blendSoftLight',\n    BlendSubtract: 'blendSubtract',\n    BlendExclusion: 'blendExclusion',\n    BlendDifference: 'blendDifference',\n    BlendDarken: 'blendDarken',\n    BlendColorDodge: 'blendColorDodge',\n    BlendColorBurn: 'blendColorBurn',\n    BlendAdd: 'blendAdd',\n    BlendLinearDodge: 'blendLinearDodge'\n};\n\n// Object.keys(blend).sort().forEach((k, i) => blend[i] = k);\n\nvar POSITION = 'POSITION';\nvar VALUE = 'VALUE';\nvar COLOR = 'COLOR';\n\nvar POS = 'pos';\n\nvar Distort = {\n    params: [['float', 'weight', 1, [-8, 8]], ['float', VALUE, 1, [-1, 1]]]\n};\n\nvar Warp = {\n    params: [['float', 'wx', 1, [-8, 8]], ['float', 'wy', 1, [-8, 8]], ['float', VALUE, 1, [-1, 1]], ['float', VALUE, 1, [-1, 1]]]\n};\n\nvar Rotate = {\n    params: [['float', 'angle', 0, [0, 360]]]\n};\n\nvar Scale = {\n    params: [['vec2', 'scale', [1, 1], [-16, 16]]]\n};\n\nvar Translate = {\n    params: [['vec2', 'offset', [0, 0], [-128, 128]]]\n};\n\nvar Tile = {\n    params: [['vec2', 'size', [0, 0], [2, 16]], ['float', 'mirrorX', 0, [0, 1]], ['float', 'mirrorY', 0, [0, 1]]]\n};\n\nvar Pixelate = {\n    params: [['float', 'steps', 8, [2, 128]]]\n};\n\nvar Twirl = {\n    params: [['float', 'weight', 8, [-16, 16]], ['float', 'size', 2, [0, 16]], ['vec2', 'offset', [0, 0], [0, 32]]]\n};\n\nvar transform = Object.freeze({\n\tDistort: Distort,\n\tWarp: Warp,\n\tRotate: Rotate,\n\tScale: Scale,\n\tTranslate: Translate,\n\tTile: Tile,\n\tPixelate: Pixelate,\n\tTwirl: Twirl\n});\n\nvar Normalize = {};\nvar Denormalize = {};\nvar Invert = {};\nvar Abs = {};\nvar Cos = {};\nvar Sin = {};\n\nvar Add = {\n    params: [['float', 'value', 0.5, [-2, 2]]]\n};\n\nvar Min = {\n    glsl: 'min',\n    params: [['float', 'value', 0.5, [-2, 2]]]\n};\n\nvar Max = {\n    glsl: 'max',\n    params: [['float', 'value', 0.5, [-2, 2]]]\n};\n\nvar Multiply = {\n    params: [['float', 'value', 0.5, [-2, 2]]]\n};\n\nvar SmoothStep = {\n    params: [['float', 'edge0', 0, [-2, 2]], ['float', 'edge1', 1, [-2, 2]]]\n};\n\nvar Posterize = {\n    params: [['float', 'steps', 8, [2, 32]], ['float', 'gamma', 0.6, [0, 2]]]\n};\n\nvar Bias = {\n    params: [['float', 'bias', 0.25, [0, 1]]]\n};\n\nvar Gain = {\n    params: [['float', 'gain', 0.25, [0, 1]]]\n};\n\nvar Clamp = {\n    params: [['float', 'from', 0, [-1, 1]], ['float', 'to', 1, [-1, 1]]]\n};\n\nvar modify = Object.freeze({\n\tNormalize: Normalize,\n\tDenormalize: Denormalize,\n\tInvert: Invert,\n\tAbs: Abs,\n\tCos: Cos,\n\tSin: Sin,\n\tAdd: Add,\n\tMin: Min,\n\tMax: Max,\n\tMultiply: Multiply,\n\tSmoothStep: SmoothStep,\n\tPosterize: Posterize,\n\tBias: Bias,\n\tGain: Gain,\n\tClamp: Clamp\n});\n\nvar X = {};\nvar Y = {};\nvar Length = {};\nvar SinX = {\n    scale: 16\n};\nvar SinY = {\n    scale: 16\n};\nvar SinXY = {\n    scale: 16\n};\n\nvar Xor = {\n    scale: 256\n};\n\n// export const Color = {\n//     glsl: 'vec3',\n//     color: true,\n//     position: false,\n//     params: ['vec3', 'color', [1, 1, 1]]\n// };\n\nvar Value = {\n    glsl: 'float',\n    position: false,\n    params: [['float', 'value', 1, [-1, 1]]]\n};\n\nvar SimplexNoise = {\n    glsl: 'snoise',\n    normalized: false\n};\n\nvar Checker = {\n    glsl: 'checker',\n    params: [['float', 'repeats', 2, [1, 128]]]\n};\n\nvar PerlinNoise = {\n    glsl: 'cnoise',\n    normalized: false,\n    scale: 4\n};\n\nvar PeriodicNoise = {\n    glsl: 'pnoise',\n    params: [['vec2', 'size', [16, 16], [1, 128]]],\n    normalized: false,\n    scale: 4\n};\n\nvar WorleyF1 = {\n    params: [['float', 'jitter', 1, [0, 1]], ['float', 'manhattanDistance', 0, [0, 1]]],\n    scale: 2,\n    examples: [[0.5, 0], [0, 0], [1, 1]]\n};\n\nvar WorleyF2 = {\n    params: [['float', 'jitter', 1, [0, 1]], ['float', 'manhattanDistance', 0, [0, 1]]],\n    scale: 2,\n    examples: [[0.5, 0], [0, 0], [1, 1]]\n};\n\nvar WorleyF1F2 = {\n    params: [['float', 'jitter', 1, [0, 1]], ['float', 'manhattanDistance', 0, [0, 1]]],\n    scale: 2,\n    examples: [[0.5, 0], [0, 0], [1, 1], [0, 1]]\n};\n\nvar WorleyF2F1 = {\n    params: [['float', 'jitter', 1, [0, 1]], ['float', 'manhattanDistance', 0, [0, 1]]],\n    scale: 2,\n    examples: [[0.5, 0], [0, 0], [1, 1]]\n};\n\nvar WorleyCrackle = {\n    params: [['float', 'jitter', 1, [0, 1]], ['float', 'manhattanDistance', 0, [0, 1]], ['float', 'multiply', 8, [1, 32]], ['float', 'divide', 2, [1, 32]], ['float', 'offset', 0.5, [0, 8]]],\n    scale: 2,\n    examples: [[0.5, 0, 8, 2, 0.5], [0, 0, 8, 2, 0.5], [1, 1, 8, 2, 0.5], [1, 0, 32, 2, 0.5], [1, 0, 32, 1, 2], [1, 0, 32, 1, 4], [1, 1, 32, 1, 4], [0.25, 1, 32, 1, 4]]\n};\n\nvar RidgedMultiFractal = {\n    glsl: 'ridgedMultiFractal',\n    params: [['float', 'H', 0.25, [0, 8]], ['float', 'lacunarity', 2, [0, 8]], ['float', 'frequency', 2, [0, 8]], ['float', 'octaves', 6, [1, 12]], ['float', 'offset', .9, [-2, 2]], ['float', 'gain', 1.5, [-8, 8]]],\n    scale: 1,\n    examples: [[0.25, 1, 1, 1, 1.01, 1], [0.25, 3, 1, 9, 1.01, 1]]\n};\n\nvar HybridMultiFractal = {\n    glsl: 'hybridMultiFractal',\n    params: [['float', 'H', 0.25, [0, 8]], ['float', 'lacunarity', 3, [0, 8]], ['float', 'frequency', 2, [0, 8]], ['float', 'octaves', 6, [1, 12]], ['float', 'offset', .05, [-2, 2]]],\n    normalized: false,\n    scale: 1,\n    examples: [[0.1, 1.5, 3, 6, 0]]\n};\n\nvar HeteroTerrain = {\n    glsl: 'heteroTerrainA',\n    params: [['float', 'H', 0.5, [0.01, 3]], ['float', 'lacunarity', 2, [1, 3]], ['float', 'frequency', 2, [1, 8]], ['float', 'octaves', 6, [1, 8]], ['float', 'offset', .05, [-1, 1]]],\n    normalized: false,\n    scale: 1,\n    examples: [[2, 1.5, 3, 2, 0]]\n};\n\nvar MultiFractal = {\n    glsl: 'multifractalA',\n    params: [['float', 'H', 0.5, [0.01, 2]], ['float', 'lacunarity', 2, [1, 2]], ['float', 'frequency', 2, [1, 8]], ['float', 'octaves', 6, [1, 8]], ['float', 'offset', .8, [-1, 1]], ['float', 'noise', null, null, 'snoise', [['vec2', POS]]]],\n    scale: 1,\n    examples: [[1.5, 1.5, 4, 6, 0.85]]\n};\n\nvar FBm = {\n    glsl: 'fBmA',\n    params: [['float', 'H', 0.5, [0, 8]], ['float', 'lacunarity', 2, [0, 8]], ['float', 'frequency', 2, [0, 8]], ['float', 'octaves', 6, [1, 12]]],\n    normalized: false,\n    scale: 1,\n    examples: [[0.85, 2.5, 4, 6]]\n};\n\nvar RGB = {\n    glsl: 'vec3',\n    color: true,\n    position: false,\n    params: [['float', VALUE, 1, [0, 1]], ['float', VALUE, 1, [0, 1]], ['float', VALUE, 1, [0, 1]]]\n};\n\nvar HSV = {\n    glsl: 'HSV',\n    color: true,\n    position: false,\n    params: [['float', VALUE, 1, [0, 1]], ['float', VALUE, 1, [0, 1]], ['float', VALUE, 1, [0, 1]]]\n};\n\nvar generator = Object.freeze({\n\tX: X,\n\tY: Y,\n\tLength: Length,\n\tSinX: SinX,\n\tSinY: SinY,\n\tSinXY: SinXY,\n\tXor: Xor,\n\tValue: Value,\n\tSimplexNoise: SimplexNoise,\n\tChecker: Checker,\n\tPerlinNoise: PerlinNoise,\n\tPeriodicNoise: PeriodicNoise,\n\tWorleyF1: WorleyF1,\n\tWorleyF2: WorleyF2,\n\tWorleyF1F2: WorleyF1F2,\n\tWorleyF2F1: WorleyF2F1,\n\tWorleyCrackle: WorleyCrackle,\n\tRidgedMultiFractal: RidgedMultiFractal,\n\tHybridMultiFractal: HybridMultiFractal,\n\tHeteroTerrain: HeteroTerrain,\n\tMultiFractal: MultiFractal,\n\tFBm: FBm,\n\tRGB: RGB,\n\tHSV: HSV\n});\n\n// http://iquilezles.org/www/articles/palettes/palettes.htm\nvar CosPalette = {\n    glsl: 'cosPalette',\n    params: [['vec3', 'a', [0.5, 0.5, 0.5], [0, 1]], ['vec3', 'b', [0.5, 0.5, 0.5], [0, 1]], ['vec3', 'c', [1.0, 1.0, 1.0], [0, 1]], ['vec3', 'd', [0.0, 0.33, 0.67], [0, 1]]],\n    examples: [[[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [1.0, 1.0, 1.0], [0.0, 0.33, 0.67]], [[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [1.0, 1.0, 1.0], [0.0, 0.10, 0.20]], [[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [1.0, 1.0, 1.0], [0.3, 0.20, 0.20]], [[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [1.0, 1.0, 0.5], [0.8, 0.90, 0.30]], [[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [1.0, 0.7, 0.4], [0.0, 0.15, 0.20]], [[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [2.0, 1.0, 0.0], [0.5, 0.20, 0.25]], [[0.8, 0.5, 0.4], [0.2, 0.4, 0.2], [2.0, 1.0, 1.0], [0.0, 0.25, 0.25]]]\n};\n\nvar Tint = {\n    color: true,\n    params: [['vec3', 'color', [0.5, 0.5, 0.5], [0, 1]]]\n};\n\nvar colorize = Object.freeze({\n\tCosPalette: CosPalette,\n\tTint: Tint\n});\n\nvar Grayscale = {};\n\nvar desaturate = Object.freeze({\n\tGrayscale: Grayscale\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n// import * as _list from './list';\nvar list = {};\n\nvar features = {\n    blend: blend,\n    transform: transform,\n    modify: modify,\n    generator: generator,\n    colorize: colorize,\n    desaturate: desaturate\n};\n\n\n\nfunction expand() {\n    each(features, function (k) {\n        each(features[k], function (m) {\n            // console.log(features[k][m]);\n            var f = features[k][m];\n\n            if (typeof f === 'string') {\n                features[k][m] = f = {\n                    glsl: f\n                };\n            }\n\n            expandFeature(f, k, m);\n        });\n    });\n}\n\nvar glsls = [];\n\nfunction expandFeature(f, k, m) {\n    f.type = k;\n    f.name = m;\n    f.glsl = f.glsl || m;\n    f.params = f.params || [];\n    f.variants = variants[k](f);\n\n    glsls.push(f.glsl);\n}\n\nvar variants = {\n    blend: function blend$$1() {\n        return [{\n            output: 'float',\n            input: [['float', VALUE, 0.5, [0, 1]], ['float', VALUE, 0.5, [0, 1]]]\n        }, {\n            output: 'float',\n            input: [['float', VALUE, 0.5, [0, 1]], ['float', VALUE, 0.5, [0, 1]], ['float', 'opacity', 0.5, [0, 1]]]\n        }, {\n            output: 'vec3',\n            input: [['vec3', COLOR, [0.5, 0.5, 0.5], [0, 1]], ['vec3', COLOR, [0.5, 0.5, 0.5], [0, 1]]]\n        }, {\n            output: 'vec3',\n            input: [['vec3', COLOR, [0.5, 0.5, 0.5], [0, 1]], ['vec3', COLOR, [0.5, 0.5, 0.5], [0, 1]], ['float', 'opacity', 0.5, [0, 1]]]\n        }];\n    },\n    transform: function transform(feature) {\n        return [{\n            output: 'vec2',\n            input: [['vec2', POSITION]].concat(toConsumableArray(feature.params))\n        }];\n    },\n    modify: function modify(feature) {\n        return [{\n            output: 'float',\n            input: [['float', VALUE, 0.5, [-1, 1]]].concat(toConsumableArray(feature.params))\n        }, {\n            output: 'vec3',\n            input: [['vec3', COLOR, [0.5, 0.5, 0.5], [0, 1]]].concat(toConsumableArray(feature.params))\n        }];\n    },\n    generator: function generator(feature) {\n        return [{\n            output: feature.color ? 'vec3' : 'float',\n            input: feature.position === false ? feature.params : [['vec2', POSITION]].concat(toConsumableArray(feature.params))\n        }];\n    },\n    colorize: function colorize(feature) {\n        return [{\n            output: 'vec3',\n            input: [['float', VALUE, 0.5, [0, 1]]].concat(toConsumableArray(feature.params))\n        }].concat(toConsumableArray(feature.color ? [{\n            output: 'vec3',\n            input: [['vec3', COLOR, [0.5, 0.5, 0.5], [0, 1]]].concat(toConsumableArray(feature.params))\n        }] : []));\n    },\n    desaturate: function desaturate(feature) {\n        return [{\n            output: 'float',\n            input: [['vec3', COLOR, [0.5, 0.5, 0.5], [0, 1]]].concat(toConsumableArray(feature.params))\n        }];\n    }\n};\n\nfunction getAll() {\n    var all = [];\n    each(features, function (k) {\n        return each(features[k], function (m) {\n            list[m] = features[k][m];\n            features[k][m].variants.forEach(function (v) {\n                var f = features[k][m];\n                v.type = f.type;\n                v.name = f.name;\n                v.glsl = f.glsl;\n                v.variable = hasVariableInput(v);\n                v.position = hasPositionInput(v);\n                all.push(v);\n            });\n        });\n    });\n    return all;\n}\n\n\n\nexpand();\nvar all = getAll();\n\n\n\nfunction hasVariableInput(v) {\n    var arr = v.input || [];\n\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i][1] === VALUE || arr[i][1] === COLOR) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction hasPositionInput(v) {\n    var arr = v.input || [];\n\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i][1] === POSITION) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar GLSL = gltg;\n\nfunction getFragments() {\n    var lines = gltg.split('\\n');\n\n    var ids = [];\n    var match = null;\n\n    lines.forEach(function (line, i) {\n        if (line[0] === '}') {\n            var p = ids[ids.length - 1];\n            p.last = i;\n            p.lines = lines.slice(p.first, p.last + 1);\n        } else if (line[0] === ' ' || line[0] === '#') {} else if (match = /^[^ ]+ ([^(]+)/.exec(line)) {\n            ids.push({\n                name: match[1],\n                first: i,\n                main: glsls.indexOf(match[1]) >= 0\n            });\n        }\n    });\n\n    var names = {};\n    ids.forEach(function (ids) {\n        return names[ids.name] = true;\n    });\n    ids.forEach(function (id) {\n        return id.deps = findCalls(id.lines, id.name, names);\n    });\n\n    var dupl = null;\n\n    while (dupl = findDuplicate(ids)) {\n        removeDuplicate(dupl, ids);\n    }\n\n    var ret = {};\n\n    ids.forEach(function (id) {\n        ret[id.name] = ret[id.name] || { lines: [] };\n        ret[id.name].lines = [].concat(toConsumableArray(ret[id.name].lines), toConsumableArray(id.lines));\n\n        if (id.deps.length) {\n            ret[id.name].deps = ret[id.name].deps || [];\n            id.deps.forEach(function (d) {\n                if (ret[id.name].deps.indexOf(d) === -1) {\n                    ret[id.name].deps.push(d);\n                }\n            });\n        }\n    });\n\n    return ret;\n}\n\nfunction removeDuplicate(dupls, ids) {\n    if (dupls[0].main) {\n        dupls.reverse();\n    }\n\n    var keep = dupls[1];\n    var remove = dupls[0];\n\n    ids.splice(ids.indexOf(remove), 1);\n\n    ids.forEach(function (id) {\n        var ind = void 0;\n\n        if ((ind = id.deps.indexOf(remove.name)) >= 0) {\n            id.deps[ind] = keep.name;\n\n            id.lines.forEach(function (line, i) {\n                id.lines[i] = line.replace(new RegExp(remove.name + '\\\\(', 'g'), keep.name + '(');\n            });\n        }\n    });\n}\n\nfunction findCalls(lines, name, names) {\n    var rx = /([a-z0-9_]+)\\(/gi;\n    var matches = void 0;\n    var results = {};\n\n    while (matches = rx.exec(lines.join('\\n'))) {\n        if (matches[1] !== name && names[matches[1]]) {\n            results[matches[1]] = true;\n        }\n    }\n\n    return Object.keys(results);\n}\n\nfunction findDuplicate(ids) {\n    ids.forEach(function (id) {\n        id.simple = simpleFunction(id.lines);\n    });\n\n    var pair = null;\n\n    ids.forEach(function (id1, i) {\n        if (pair !== null) {\n            return;\n        }\n\n        ids.forEach(function (id2, j) {\n            if (i === j || pair !== null) {\n                return;\n            }\n\n            if (id1.simple === id2.simple) {\n                if (!(id1.main && id2.main)) {\n                    pair = [id1, id2];\n                }\n            }\n        });\n    });\n\n    ids.forEach(function (id) {\n        delete id.simple;\n    });\n\n    return pair;\n}\n\nfunction simpleFunction(lines) {\n    var first = lines[0].replace(/([a-z0-9]+) [^(]+/i, '$1 function');\n    return [first].concat(toConsumableArray(lines.slice(1))).join('\\n');\n}\n\nif ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined') {\n    console.log(JSON.stringify(getFragments(), null, 2));\n}\n\nexports.GLSL = GLSL;\nexports.getFragments = getFragments;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"},Dy34:function(e,n,t){t("P+fo")(t("4RHH"))},FWIU:function(e,n,t){t("P+fo")(t("JKPA"))},JKPA:function(e,n){e.exports='!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("../../node_modules/three/src/Three.js")):"function"==typeof define&&define.amd?define(["exports","../../node_modules/three/src/Three.js"],n):n(e.glt=e.glt||{},e.THREE)}(this,function(e,n){"use strict";function t(e){return e instanceof Object&&!(e instanceof Array)}function r(e,n){t(e)&&Object.keys(e).forEach(function(t){return n(t,e[t])})}function a(){r(Hr,function(e){r(Hr[e],function(n){var t=Hr[e][n];"string"==typeof t&&(Hr[e][n]=t={glsl:t}),o(t,e,n)})})}function o(e,n,t){e.type=n,e.name=t,e.glsl=e.glsl||t,e.params=e.params||[],e.variants=Ur[n](e),Fr.push(e.glsl)}function l(){var e=[];return r(Hr,function(n){return r(Hr[n],function(t){kr[t]=Hr[n][t],Hr[n][t].variants.forEach(function(r){var a=Hr[n][t];r.type=a.type,r.name=a.name,r.glsl=a.glsl,r.variable=u(r),r.position=s(r),e.push(r)})})}),e}function i(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e.output+" "+e.glsl+"("+e.input.map(function(e){return e[0]+(n?" "+e[1]:"")}).join(", ")+")"}function c(e){return jr.filter(function(n){return n.name===e})}function u(e){for(var n=e.input||[],t=0;t<n.length;t++)if(n[t][1]===yt||n[t][1]===xt)return!0;return!1}function s(e){for(var n=e.input||[],t=0;t<n.length;t++)if(n[t][1]===mt)return!0;return!1}function f(e){var n=[];return r(e,function(t){n.push("uniform "+d(e[t])+" "+t+";")}),n.join("\\n")}function d(e){return e.value.length?"vec"+e.value.length:"float"}function b(e){return Array.isArray(e)}function v(e,n,t){var r=void 0;if(b(e)){var a=e.length;r=[" vec2 "+Mt+" = vec2("+wt+");"," int part = int(floor((("+Mt+".y+1.)/2.)*"+a+".));"," "+Mt+".y = mod(("+Mt+".y+1.)*"+a+".,2.)-1.;"," vec3 color;"],e.forEach(function(e,n){r.push((n?" else":"")+" if(part == "+n+") { color = "+e+"; }")})}return{vertexShader:["varying vec2 "+wt+";","","void main() {"," "+wt+" = uv * 2. - 1.;"," gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","}"].join("\\n"),fragmentShader:["uniform vec3 resolution;",t?t:null,t?"":null,n,"","varying vec2 "+wt+";","","void main() {"].concat(Pr(r?r:[" vec2 "+Mt+" = vec2("+wt+".x, "+wt+".y * resolution.y /resolution.x);"," vec3 color = "+e+";"]),[" gl_FragColor = vec4(color, 1.0);","}"]).filter(function(e){return null!==e}).join("\\n")}}function p(e){if(null===e||"object"!==("undefined"==typeof e?"undefined":Tr(e)))return e;var n=e.constructor();for(var t in e)n[t]=p(e[t]);return n}function h(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;n||(Er=[]),Er.push(e),e.level=n;var r=[];if((e.params||[]).forEach(function(e){t(e)?(r.push(e),h(e,n+1)):b(e)&&e.forEach(function(e){t(e)&&h(e,n+1)})}),!n){var a=Er;return Er=null,a.sort(function(e,n){return n.level-e.level}),a.forEach(function(e){return delete e.level}),a}}function g(e){var n=zr({},e),t=h(n.data);return t.forEach(function(e){e.params=e.params||[],e.proto=p(x(e)),e.proto&&m(e)}),n}function m(e){var n=w(e);n.forEach(function(n,t){var r=e.proto.input[t][0];n&&n!==r&&"float"===n&&"vec3"===r&&(e.params[t]=y(e.params[t],r))})}function y(e,n){return{params:[e],proto:{glsl:n,input:[["vec3"]]}}}function x(e){var n=c(e.name);if(!n.length)throw new Error("Unknown feature: "+e.name);if(1===n.length)return n[0];var t=w(e),r=M(n,t);if(1===r.length)return r[0];if(r.length>1)return r[0];var a=L(n,t);if(1===a.length)return a[0];if(a.length>1)return a[0];var o=S(n,t);if(1===o.length)return o[0];if(o.length>1)return o[0];throw new Error("Unknown signature: "+e.name+"("+t.join(", ")+")")}function w(e){return e.params.map(function(e){return t(e)&&e.proto?e.proto.output:b(e)?"vec"+e.length:isNaN(e)||Number.isInteger(e)?e===!0||e===!1?"bool":null:"float"})}function M(e,n){return e.filter(function(e){if(e.input.length===n.length){for(var t=0;t<e.input.length;t++)if(n[t]&&n[t]!==e.input[t][0])return!1;return!0}return!1})}function L(e,n){return e.filter(function(e){if(e.input.length>n.length){for(var t=0;t<n.length;t++)if(n[t]&&n[t]!==e.input[t][0])return!1;return!0}return!1})}function S(e,n){return e.filter(function(e){if(e.input.length===n.length){for(var t=0;t<e.input.length;t++)if(n[t]&&"float"===n[t]&&"vec3"===e.input[t][0]);else if(n[t]&&n[t]!==e.input[t][0])return!1;return!0}return!1})}function D(e){return void 0!==e&&null!==e}function C(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return t===!0&&(t=e),n&&"vec3"!==e.proto.output?"vec3("+C(e,!1,t)+")":e.proto.glsl+"("+T(e,t).join(", ")+")"}function T(e,n){return e.proto.input.filter(function(e){return!e[Lt.placeholder]}).map(function(r,a){var o=e.params[a];return t(o)?C(o,!1,n):N(o,r,n,e)})}function N(e,n,r,a){if("vec2"===n[0]&&e===Mt)return e;var o=D(e)?e:D(n[2])?n[2]:_(n[0]);if(t(o))return C(e,!1,r);if("int"===n[0])return o.toString();if("bool"===n[0])return o.toString();if("float"===n[0]){if(r.uniforms)return z(r,o,n,a);var l=o.toString();return l.indexOf(".")>=0?l:l+"."}return 0===n[0].indexOf("vec")?r.uniforms?z(r,o,n,a):n[0]+"("+o.map(function(e){return N(e,["float"],r,a)}).join(", ")+")":e}function _(e){if(0===e.indexOf("vec")){for(var n=parseInt(e.replace("vec","")),t=[],r=0;r<n;r++)t.push(1);return t}return"bool"===e||1}function z(e,n,t,r){var a=r.name+P(t[1]);e.names=e.names||{},e.names[a]=e.names[a]||0,e.names[a]++;var o=e.names[a];return a+=o>1?+o:"",e.uniforms[a]={value:n,proto:t,id:r.id,index:r.proto.input.indexOf(t)},a}function P(e){return e[0].toUpperCase()+e.substring(1)}function k(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=n||e;e.proto.input.forEach(function(n,a){var o=e.params[a];t(o)&&k(o,r),n[Lt.placeholder]&&t(o)&&H(e,r,a)})}function H(e,n,t){var r=A(n,e.name),a=p(e.proto.input).splice(t,1)[0],o=A(n,a[Lt.name]);n.functions=n.functions||{},n.functions[r]={name:r,proto:{glsl:r,use:e.proto.glsl,placeholder:a[Lt.placeholder],target:o}},a=e.proto.input.splice(t,1)[0];var l=e.params.splice(t,1);n.functions[o]={name:o,params:l,proto:{glsl:o,output:a[Lt.type],input:[a]}},e.proto.glsl=r}function A(e,n){e.functions=e.functions||{};for(var t=n;t+="_",e.functions[t];);return t}function F(e,n){var t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=n?zr({},vo,n):vo;if(!e)return U(t,r,n);for(var a=[].concat(Pr(e));j(a,r););B(a,null,r);var o=[];return a.forEach(function(e){r[e]&&o.push(t?r[e].lines.join(""):r[e].lines.join("\\n"))}),o.join("\\n")}function U(e,n,t){return F(Object.keys(n),t,e)}function j(e,n){for(var t=e.length,r=0;r<e.length;r++){var a=e[e.length-1-r];if(n[a]&&n[a].deps)for(var o=0;o<n[a].deps.length;o++){var l=n[a].deps[o],i=e.indexOf(l);i===-1?(e.unshift(l),r--):(e.splice(i,1),e.unshift(l),i>e.length-1-r&&r--)}}return e.length!==t}function B(e,n,t){var r=n||{};e.forEach(function(e){r[e]=r[e]||0,r[e]++,t[e]&&t[e].deps&&B(t[e].deps,r,t)}),e.sort(function(e,n){return r[n]-r[e]})}function E(e,n){var a=n||e;a.required=a.required||[],a.required.indexOf(e.proto.glsl)===-1&&a.required.push(e.proto.glsl),e.params.forEach(function(e){t(e)&&E(e,a)}),e.functions&&r(e.functions,function(e,n){n.params&&n.params.forEach(function(e){t(e)&&E(e,a)})})}function O(e,n){if(e.proto.use){var t=vo[e.proto.use],r=new RegExp(e.proto.use,"g"),a=new RegExp(e.proto.placeholder,"g");return{lines:t.lines.map(function(n){return n.replace(r,e.proto.glsl).replace(a,e.proto.target)}),deps:t.deps.map(function(n){return n.replace(e.proto.placeholder,e.proto.target)})}}var o=e.proto.input[0][Lt.input][0],l={};return E(e.params[0],l),{lines:[e.proto.output+" "+e.proto.glsl+"("+o[0]+" "+o[1]+") {"," return "+C(e.params[0],!1,n)+";","}"],deps:l.required}}function q(e,n){r(e.functions,function(e,t){var r=O(t,n);t.lines=r.lines,t.deps=r.deps})}function R(e){return t(e.data)?ho.TREE:b(e.data)?ho.GRAPH:ho.UNKNOWN}function Y(e){return"string"==typeof e}function I(e){return"number"==typeof e}function K(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(e=e.data?p(e.data):e,e&&e.length){e=W(e);var r=e.pop(),a={name:r[0],id:r.id};switch(kr[r[0]].type){case Ar.transform:return n.push(r),K(e,n);case Ar.blend:return t(r[1])&&(a.params=[K(r[1],[].concat(Pr(n))),K(r[2],[].concat(Pr(n)))].concat(Pr(r.slice(3)))),a;case Ar.generator:return a.params=[].concat(Pr(X(n,r[0])),Pr(G(r,n))),a;case Ar.modify:case Ar.colorize:case Ar.desaturate:return a.params=[K(e,n)].concat(Pr(r.slice(1))),a}}}function W(e){for(var n=e.length-1;n>=0;n--){var t=e[n];if(kr[t[0]].type===Ar.blend){var r=I(t[1]);if(Y(t[1])||r&&Y(t[2])){var a=t.slice(1+r);a.id=t.id;var o=t[1];return t.splice(1+r),t[1]={data:e.slice(0,n)},t[2]={data:[a].concat(Pr(e.slice(n+1)))},r&&(t[3]=o),[t]}return e}}return e}function G(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return e.slice(1).map(function(e){return t(e)&&e.data?K([].concat(Pr(e.data)),[].concat(Pr(n))):e})}function X(e,n){return Hr.generator[n].position===!1?[]:[V(e?[].concat(Pr(e)):[])]}function V(e){if(e&&e.length){var n=e.pop();return{name:n[0],id:n.id,params:[V(e)].concat(Pr(G(n)))}}return Mt}function $(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(e.data||[]).forEach(function(e){e.id=Object.keys(n).length+1,n[e.id]=e,e.forEach(function(e){e.data&&$(e,n)})}),n}function Z(e){var n=h(e.data),t=n.filter(function(e){return e.proto.output===St||e.proto.output===Dt});return t.map(function(e){return C(e)})}function J(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:po.INLINE,t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=R(e),a=r===ho.GRAPH?e:null,o=a?$(a):null,l=r===ho.TREE?e:{data:K(e)},i=g(p(l)),c=void 0;k(i.data);var u=Z(i);n>po.INLINE&&(i.data.uniforms={}),E(i.data),q(i.data,i.data),c=C(i.data);var s={graph:a,ids:o,tree:l,syntax:i,shader:c,partials:u,uniforms:i.data.uniforms,required:i.data.required,functions:i.data.functions,code:F(i.data.required,i.data.functions,!t)};return delete i.data.functions,delete i.data.uniforms,delete i.data.required,delete i.data.names,s}function Q(e,n){e[n.id][n.index]=n.value}function ee(e){var n=[];return r(e,function(t){n.push("#define "+t+" "+ne(e[t].proto[0],e[t].value))}),n.join("\\n")}function ne(e,n){if("float"===e){var t=n.toString();return t.indexOf(".")>=0?t:t+"."}return e+"("+n.map(function(e){return ne("float",e)}).join(", ")+")"}function te(e,n,t,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:v,o=J(e,n,t),l="";n===po.DEFINE?l=ee(o.uniforms||r):n===po.UNIFORM&&(l=f(o.uniforms||r));var i=a(o.shader,o.code,l);return{color:o.shader,functions:o.code,variables:l,all:(i.vertexShader?"// Vertex shader\\n\\n"+i.vertexShader+"\\n\\n// Fragment shader\\n\\n":"")+i.fragmentShader}}function re(e,n,t){return{fragmentShader:["#ifdef GL_ES"," precision mediump float;","#endif","",t?t:null,t?"":null,n,"","uniform vec2 resolution;","","void main() {"," vec2 "+Mt+" = gl_FragCoord.xy / resolution.x * 2. - vec2(1., resolution.y / resolution.x);"," vec3 color = "+e+";"," gl_FragColor = vec4(color, 1.0);","}"].filter(function(e){return null!==e}).join("\\n")}}function ae(e,n,t){return{fragmentShader:[t?t:null,t?"":null,n,"","void mainImage(out vec4 fragColor, in vec2 fragCoord) {"," vec2 "+Mt+" = fragCoord.xy / iResolution.x * 2. - vec2(1., iResolution.y / iResolution.x);"," vec3 color = "+e+";"," fragColor = vec4(color, 1.0);","}"].filter(function(e){return null!==e}).join("\\n")}}function oe(e,n){return Math.floor(go(e,n)())}function le(e){return function(n,t){return mo(e(n),t)}}function ie(e,n,t){var r=Math.abs(n-e)/Math.max(0,t),a=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/a;return o>=Lo?a*=10:o>=So?a*=5:o>=Do&&(a*=2),n<e?-a:a}function ce(){}function ue(e,n){var t=new ce;if(e instanceof ce)e.each(function(e,n){t.set(n,e)});else if(Array.isArray(e)){var r,a=-1,o=e.length;if(null==n)for(;++a<o;)t.set(a,e[a]);else for(;++a<o;)t.set(n(r=e[a],a,e),r)}else if(e)for(var l in e)t.set(l,e[l]);return t}function se(){}function fe(e,n){var t=new se;if(e instanceof se)e.each(function(e){t.add(e)});else if(e){var r=-1,a=e.length;if(null==n)for(;++r<a;)t.add(e[r]);else for(;++r<a;)t.add(n(e[r],r,e))}return t}function de(e,n){var t=Object.create(e.prototype);for(var r in n)t[r]=n[r];return t}function be(){}function ve(e){var n;return e=(e+"").trim().toLowerCase(),(n=Bo.exec(e))?(n=parseInt(n[1],16),new ye(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1)):(n=Eo.exec(e))?pe(parseInt(n[1],16)):(n=Oo.exec(e))?new ye(n[1],n[2],n[3],1):(n=qo.exec(e))?new ye(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Ro.exec(e))?he(n[1],n[2],n[3],n[4]):(n=Yo.exec(e))?he(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Io.exec(e))?xe(n[1],n[2]/100,n[3]/100,1):(n=Ko.exec(e))?xe(n[1],n[2]/100,n[3]/100,n[4]):Wo.hasOwnProperty(e)?pe(Wo[e]):"transparent"===e?new ye(NaN,NaN,NaN,0):null}function pe(e){return new ye(e>>16&255,e>>8&255,255&e,1)}function he(e,n,t,r){return r<=0&&(e=n=t=NaN),new ye(e,n,t,r)}function ge(e){return e instanceof be||(e=ve(e)),e?(e=e.rgb(),new ye(e.r,e.g,e.b,e.opacity)):new ye}function me(e,n,t,r){return 1===arguments.length?ge(e):new ye(e,n,t,null==r?1:r)}function ye(e,n,t,r){this.r=+e,this.g=+n,this.b=+t,this.opacity=+r}function xe(e,n,t,r){return r<=0?e=n=t=NaN:t<=0||t>=1?e=n=NaN:n<=0&&(e=NaN),new Le(e,n,t,r)}function we(e){if(e instanceof Le)return new Le(e.h,e.s,e.l,e.opacity);if(e instanceof be||(e=ve(e)),!e)return new Le;if(e instanceof Le)return e;e=e.rgb();var n=e.r/255,t=e.g/255,r=e.b/255,a=Math.min(n,t,r),o=Math.max(n,t,r),l=NaN,i=o-a,c=(o+a)/2;return i?(l=n===o?(t-r)/i+6*(t<r):t===o?(r-n)/i+2:(n-t)/i+4,i/=c<.5?o+a:2-o-a,l*=60):i=c>0&&c<1?0:l,new Le(l,i,c,e.opacity)}function Me(e,n,t,r){return 1===arguments.length?we(e):new Le(e,n,t,null==r?1:r)}function Le(e,n,t,r){this.h=+e,this.s=+n,this.l=+t,this.opacity=+r}function Se(e,n,t){return 255*(e<60?n+(t-n)*e/60:e<180?t:e<240?n+(t-n)*(240-e)/60:n)}function De(e){if(e instanceof Te)return new Te(e.l,e.a,e.b,e.opacity);if(e instanceof Ae){var n=e.h*Go;return new Te(e.l,Math.cos(n)*e.c,Math.sin(n)*e.c,e.opacity)}e instanceof ye||(e=ge(e));var t=Pe(e.r),r=Pe(e.g),a=Pe(e.b),o=Ne((.4124564*t+.3575761*r+.1804375*a)/$o),l=Ne((.2126729*t+.7151522*r+.072175*a)/Zo),i=Ne((.0193339*t+.119192*r+.9503041*a)/Jo);return new Te(116*l-16,500*(o-l),200*(l-i),e.opacity)}function Ce(e,n,t,r){return 1===arguments.length?De(e):new Te(e,n,t,null==r?1:r)}function Te(e,n,t,r){this.l=+e,this.a=+n,this.b=+t,this.opacity=+r}function Ne(e){return e>tl?Math.pow(e,1/3):e/nl+Qo}function _e(e){return e>el?e*e*e:nl*(e-Qo)}function ze(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function Pe(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function ke(e){if(e instanceof Ae)return new Ae(e.h,e.c,e.l,e.opacity);e instanceof Te||(e=De(e));var n=Math.atan2(e.b,e.a)*Xo;return new Ae(n<0?n+360:n,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}function He(e,n,t,r){return 1===arguments.length?ke(e):new Ae(e,n,t,null==r?1:r)}function Ae(e,n,t,r){this.h=+e,this.c=+n,this.l=+t,this.opacity=+r}function Fe(e){if(e instanceof je)return new je(e.h,e.s,e.l,e.opacity);e instanceof ye||(e=ge(e));var n=e.r/255,t=e.g/255,r=e.b/255,a=(sl*r+cl*n-ul*t)/(sl+cl-ul),o=r-a,l=(il*(t-a)-ol*o)/ll,i=Math.sqrt(l*l+o*o)/(il*a*(1-a)),c=i?Math.atan2(l,o)*Xo-120:NaN;return new je(c<0?c+360:c,i,a,e.opacity)}function Ue(e,n,t,r){return 1===arguments.length?Fe(e):new je(e,n,t,null==r?1:r)}function je(e,n,t,r){this.h=+e,this.s=+n,this.l=+t,this.opacity=+r}function Be(e,n){return function(t){return e+t*n}}function Ee(e,n,t){return e=Math.pow(e,t),n=Math.pow(n,t)-e,t=1/t,function(r){return Math.pow(e+r*n,t)}}function Oe(e,n){var t=n-e;return t?Be(e,t>180||t<-180?t-360*Math.round(t/360):t):fl(isNaN(e)?n:e)}function qe(e){return 1===(e=+e)?Re:function(n,t){return t-n?Ee(n,t,e):fl(isNaN(n)?t:n)}}function Re(e,n){var t=n-e;return t?Be(e,t):fl(isNaN(e)?n:e)}function Ye(e){return function(){return e}}function Ie(e){return function(n){return e(n)+""}}function Ke(e){return function n(t){function r(n,r){var a=e((n=Ue(n)).h,(r=Ue(r)).h),o=Re(n.s,r.s),l=Re(n.l,r.l),i=Re(n.opacity,r.opacity);return function(e){return n.h=a(e),n.s=o(e),n.l=l(Math.pow(e,t)),n.opacity=i(e),n+""}}return t=+t,r.gamma=n,r}(1)}function We(e,n){return(n-=e=+e)?function(t){return(t-e)/n}:Sl(n)}function Ge(e){return function(n,t){var r=e(n=+n,t=+t);return function(e){return e<=n?0:e>=t?1:r(e)}}}function Xe(e){return function(n,t){var r=e(n=+n,t=+t);return function(e){return e<=0?n:e>=1?t:r(e)}}}function Ve(e,n,t,r){var a=e[0],o=e[1],l=n[0],i=n[1];return o<a?(a=t(o,a),l=r(i,l)):(a=t(a,o),l=r(l,i)),function(e){return l(a(e))}}function $e(e,n,t,r){var a=Math.min(e.length,n.length)-1,o=new Array(a),l=new Array(a),i=-1;for(e[a]<e[0]&&(e=e.slice().reverse(),n=n.slice().reverse());++i<a;)o[i]=t(e[i],e[i+1]),l[i]=r(n[i],n[i+1]);return function(n){var t=wo(e,n,1,a)-1;return l[t](o[t](n))}}function Ze(e,n){return n.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp())}function Je(e,n){function t(){return a=Math.min(i.length,c.length)>2?$e:Ve,o=l=null,r}function r(n){return(o||(o=a(i,c,s?Ge(e):e,u)))(+n)}var a,o,l,i=Cl,c=Cl,u=xl,s=!1;return r.invert=function(e){return(l||(l=a(c,i,We,s?Xe(n):n)))(+e)},r.domain=function(e){return arguments.length?(i=zo.call(e,Dl),t()):i.slice()},r.range=function(e){return arguments.length?(c=Po.call(e),t()):c.slice()},r.rangeRound=function(e){return c=Po.call(e),u=wl,t()},r.clamp=function(e){return arguments.length?(s=!!e,t()):s},r.interpolate=function(e){return arguments.length?(u=e,t()):u},t()}function Qe(e){if(!(n=Al.exec(e)))throw new Error("invalid format: "+e);var n,t=n[1]||" ",r=n[2]||">",a=n[3]||"-",o=n[4]||"",l=!!n[5],i=n[6]&&+n[6],c=!!n[7],u=n[8]&&+n[8].slice(1),s=n[9]||"";"n"===s?(c=!0,s="g"):Hl[s]||(s=""),(l||"0"===t&&"="===r)&&(l=!0,t="0",r="="),this.fill=t,this.align=r,this.sign=a,this.symbol=o,this.zero=l,this.width=i,this.comma=c,this.precision=u,this.type=s}function en(e){return e}function nn(e){return Ul=Ol(e),jl=Ul.format,Bl=Ul.formatPrefix,Ul}function tn(e){var n=e.domain;return e.ticks=function(e){var t=n();return Co(t[0],t[t.length-1],null==e?10:e)},e.tickFormat=function(e,t){return Il(n(),e,t)},e.nice=function(t){var r=n(),a=r.length-1,o=null==t?10:t,l=r[0],i=r[a],c=ie(l,i,o);return c&&(c=ie(Math.floor(l/c)*c,Math.ceil(i/c)*c,o),r[0]=Math.floor(l/c)*c,r[a]=Math.ceil(i/c)*c,n(r)),e},e}function rn(){var e=Je(We,pl);return e.copy=function(){return Ze(e,rn())},tn(e)}function an(e,n,t,r){function a(n){return e(n=new Date(+n)),n}return a.floor=a,a.ceil=function(t){return e(t=new Date(t-1)),n(t,1),e(t),t},a.round=function(e){var n=a(e),t=a.ceil(e);return e-n<t-e?n:t},a.offset=function(e,t){return n(e=new Date(+e),null==t?1:Math.floor(t)),e},a.range=function(t,r,o){var l=[];if(t=a.ceil(t),o=null==o?1:Math.floor(o),!(t<r&&o>0))return l;do l.push(new Date(+t));while(n(t,o),e(t),t<r);return l},a.filter=function(t){return an(function(n){if(n>=n)for(;e(n),!t(n);)n.setTime(n-1)},function(e,r){if(e>=e)for(;--r>=0;)for(;n(e,1),!t(e););})},t&&(a.count=function(n,r){return Kl.setTime(+n),Wl.setTime(+r),e(Kl),e(Wl),Math.floor(t(Kl,Wl))},a.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?a.filter(r?function(n){return r(n)%e===0}:function(n){return a.count(0,n)%e===0}):a:null}),a}function on(e){return an(function(n){n.setDate(n.getDate()-(n.getDay()+7-e)%7),n.setHours(0,0,0,0)},function(e,n){e.setDate(e.getDate()+7*n)},function(e,n){return(n-e-(n.getTimezoneOffset()-e.getTimezoneOffset())*Vl)/Jl})}function ln(e){return an(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-e)%7),n.setUTCHours(0,0,0,0)},function(e,n){e.setUTCDate(e.getUTCDate()+7*n)},function(e,n){return(n-e)/Jl})}function cn(e){if(0<=e.y&&e.y<100){var n=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return n.setFullYear(e.y),n}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function un(e){if(0<=e.y&&e.y<100){var n=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return n.setUTCFullYear(e.y),n}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function sn(e){return{y:e,m:0,d:1,H:0,M:0,S:0,L:0}}function fn(e){function n(e,n){return function(t){var r,a,o,l=[],i=-1,c=0,u=e.length;for(t instanceof Date||(t=new Date(+t));++i<u;)37===e.charCodeAt(i)&&(l.push(e.slice(c,i)),null!=(a=di[r=e.charAt(++i)])?r=e.charAt(++i):a="e"===r?" ":"0",(o=n[r])&&(r=o(t,a)),l.push(r),c=i+1);return l.push(e.slice(c,i)),l.join("")}}function t(e,n){return function(t){var a=sn(1900),o=r(a,e,t+="",0);if(o!=t.length)return null;if("p"in a&&(a.H=a.H%12+12*a.p),"W"in a||"U"in a){"w"in a||(a.w="W"in a?1:0);var l="Z"in a?un(sn(a.y)).getUTCDay():n(sn(a.y)).getDay();a.m=0,a.d="W"in a?(a.w+6)%7+7*a.W-(l+5)%7:a.w+7*a.U-(l+6)%7}return"Z"in a?(a.H+=a.Z/100|0,a.M+=a.Z%100,un(a)):n(a)}}function r(e,n,t,r){for(var a,o,l=0,i=n.length,c=t.length;l<i;){if(r>=c)return-1;if(a=n.charCodeAt(l++),37===a){if(a=n.charAt(l++),o=R[a in di?n.charAt(l++):a],!o||(r=o(e,t,r))<0)return-1}else if(a!=t.charCodeAt(r++))return-1}return r}function a(e,n,t){var r=z.exec(n.slice(t));return r?(e.p=P[r[0].toLowerCase()],t+r[0].length):-1}function o(e,n,t){var r=A.exec(n.slice(t));return r?(e.w=F[r[0].toLowerCase()],t+r[0].length):-1}function l(e,n,t){var r=k.exec(n.slice(t));return r?(e.w=H[r[0].toLowerCase()],t+r[0].length):-1}function i(e,n,t){var r=B.exec(n.slice(t));return r?(e.m=E[r[0].toLowerCase()],t+r[0].length):-1}function c(e,n,t){var r=U.exec(n.slice(t));return r?(e.m=j[r[0].toLowerCase()],t+r[0].length):-1}function u(e,n,t){return r(e,M,n,t)}function s(e,n,t){return r(e,L,n,t)}function f(e,n,t){return r(e,S,n,t)}function d(e){return T[e.getDay()]}function b(e){return C[e.getDay()]}function v(e){return _[e.getMonth()]}function p(e){return N[e.getMonth()]}function h(e){return D[+(e.getHours()>=12)]}function g(e){return T[e.getUTCDay()]}function m(e){return C[e.getUTCDay()]}function y(e){return _[e.getUTCMonth()]}function x(e){return N[e.getUTCMonth()]}function w(e){return D[+(e.getUTCHours()>=12)]}var M=e.dateTime,L=e.date,S=e.time,D=e.periods,C=e.days,T=e.shortDays,N=e.months,_=e.shortMonths,z=vn(D),P=pn(D),k=vn(C),H=pn(C),A=vn(T),F=pn(T),U=vn(N),j=pn(N),B=vn(_),E=pn(_),O={a:d,A:b,b:v,B:p,c:null,d:zn,e:zn,H:Pn,I:kn,j:Hn,L:An,m:Fn,M:Un,p:h,S:jn,U:Bn,w:En,W:On,x:null,X:null,y:qn,Y:Rn,Z:Yn,"%":at},q={a:g,A:m,b:y,B:x,c:null,d:In,e:In,H:Kn,I:Wn,j:Gn,L:Xn,m:Vn,M:$n,p:w,S:Zn,U:Jn,w:Qn,W:et,x:null,X:null,y:nt,Y:tt,Z:rt,"%":at},R={a:o,A:l,b:i,B:c,c:u,d:Ln,e:Ln,H:Dn,I:Dn,j:Sn,L:Nn,m:Mn,M:Cn,p:a,S:Tn,U:gn,w:hn,W:mn,x:s,X:f,y:xn,Y:yn,Z:wn,"%":_n};return O.x=n(L,O),O.X=n(S,O),O.c=n(M,O),q.x=n(L,q),q.X=n(S,q),q.c=n(M,q),{format:function(e){var t=n(e+="",O);return t.toString=function(){return e},t},parse:function(e){var n=t(e+="",cn);return n.toString=function(){return e},n},utcFormat:function(e){var t=n(e+="",q);return t.toString=function(){return e},t},utcParse:function(e){var n=t(e,un);return n.toString=function(){return e},n}}}function dn(e,n,t){var r=e<0?"-":"",a=(r?-e:e)+"",o=a.length;return r+(o<t?new Array(t-o+1).join(n)+a:a)}function bn(e){return e.replace(pi,"\\\\$&")}function vn(e){return new RegExp("^(?:"+e.map(bn).join("|")+")","i")}function pn(e){for(var n={},t=-1,r=e.length;++t<r;)n[e[t].toLowerCase()]=t;return n}function hn(e,n,t){var r=bi.exec(n.slice(t,t+1));return r?(e.w=+r[0],t+r[0].length):-1}function gn(e,n,t){var r=bi.exec(n.slice(t));return r?(e.U=+r[0],t+r[0].length):-1}function mn(e,n,t){var r=bi.exec(n.slice(t));return r?(e.W=+r[0],t+r[0].length):-1}function yn(e,n,t){var r=bi.exec(n.slice(t,t+4));return r?(e.y=+r[0],t+r[0].length):-1}function xn(e,n,t){var r=bi.exec(n.slice(t,t+2));return r?(e.y=+r[0]+(+r[0]>68?1900:2e3),t+r[0].length):-1}function wn(e,n,t){var r=/^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(n.slice(t,t+6));return r?(e.Z=r[1]?0:-(r[2]+(r[3]||"00")),t+r[0].length):-1}function Mn(e,n,t){var r=bi.exec(n.slice(t,t+2));return r?(e.m=r[0]-1,t+r[0].length):-1}function Ln(e,n,t){var r=bi.exec(n.slice(t,t+2));return r?(e.d=+r[0],t+r[0].length):-1}function Sn(e,n,t){var r=bi.exec(n.slice(t,t+3));return r?(e.m=0,e.d=+r[0],t+r[0].length):-1}function Dn(e,n,t){var r=bi.exec(n.slice(t,t+2));return r?(e.H=+r[0],t+r[0].length):-1}function Cn(e,n,t){var r=bi.exec(n.slice(t,t+2));return r?(e.M=+r[0],t+r[0].length):-1}function Tn(e,n,t){var r=bi.exec(n.slice(t,t+2));return r?(e.S=+r[0],t+r[0].length):-1}function Nn(e,n,t){var r=bi.exec(n.slice(t,t+3));return r?(e.L=+r[0],t+r[0].length):-1}function _n(e,n,t){var r=vi.exec(n.slice(t,t+1));return r?t+r[0].length:-1}function zn(e,n){return dn(e.getDate(),n,2)}function Pn(e,n){return dn(e.getHours(),n,2)}function kn(e,n){return dn(e.getHours()%12||12,n,2)}function Hn(e,n){return dn(1+Ql.count(ti(e),e),n,3)}function An(e,n){return dn(e.getMilliseconds(),n,3)}function Fn(e,n){return dn(e.getMonth()+1,n,2)}function Un(e,n){return dn(e.getMinutes(),n,2)}function jn(e,n){return dn(e.getSeconds(),n,2)}function Bn(e,n){return dn(ei.count(ti(e),e),n,2)}function En(e){return e.getDay()}function On(e,n){return dn(ni.count(ti(e),e),n,2)}function qn(e,n){return dn(e.getFullYear()%100,n,2)}function Rn(e,n){return dn(e.getFullYear()%1e4,n,4)}function Yn(e){var n=e.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+dn(n/60|0,"0",2)+dn(n%60,"0",2)}function In(e,n){return dn(e.getUTCDate(),n,2)}function Kn(e,n){return dn(e.getUTCHours(),n,2)}function Wn(e,n){return dn(e.getUTCHours()%12||12,n,2)}function Gn(e,n){return dn(1+ri.count(li(e),e),n,3)}function Xn(e,n){return dn(e.getUTCMilliseconds(),n,3)}function Vn(e,n){return dn(e.getUTCMonth()+1,n,2)}function $n(e,n){return dn(e.getUTCMinutes(),n,2)}function Zn(e,n){return dn(e.getUTCSeconds(),n,2)}function Jn(e,n){return dn(ai.count(li(e),e),n,2)}function Qn(e){return e.getUTCDay()}function et(e,n){return dn(oi.count(li(e),e),n,2)}function nt(e,n){return dn(e.getUTCFullYear()%100,n,2)}function tt(e,n){return dn(e.getUTCFullYear()%1e4,n,4)}function rt(){return"+0000"}function at(){return"%"}function ot(e){return ii=fn(e),ci=ii.format,ui=ii.parse,si=ii.utcFormat,fi=ii.utcParse,ii}function lt(e){return e.toISOString()}function it(e){var n=new Date(e);return isNaN(n)?null:n}function ct(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Number.MIN_VALUE,n=arguments[1],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Number.MAX_VALUE,r=isNaN(n)?(e+t)/2:n,a=8;return rn().domain([-a,0,+a]).range([e,r,t]).clamp(!0)(mi()())}function ut(e,n,t){return"int"===e&&n[3]?oe(n[3][0],n[3][1]):"float"===e&&n[3]?ct(n[3][0],n[2],n[3][1]):"vec2"===e?n[3]?[go(n[3][0],n[3][1])(),go(n[3][0],n[3][1])()]:"pos":"vec3"===e&&n[3]?[st(go(n[3][0],n[3][1])(),t),st(go(n[3][0],n[3][1])(),t),st(go(n[3][0],n[3][1])(),t)]:"vec3"!==e||n[2]?"bool"===e?Math.random()<.5:n[2]:[go(1)(),go(1)(),go(1)()]}function st(e,n){return n?Math.round(e*Math.pow(10,n))/Math.pow(10,n):e}function ft(){return{data:[["X"],["Normalize"],["CosPalette"].concat(Pr(Mr.params.map(function(e){return ut(e[0],e,2)})))]}}function dt(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"vec3",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:5,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];if("bool"===e||"int"===e)return ut(e,n);if(n&&n[1]!==yt&&n[1]!==xt&&n[1]!==mt)return ut(e,n);var l=jr.filter(function(n){return n.output===e});if(o&&(l=l.filter(function(e){return e.type!==Ar.blend})),t>=r&&(n[1]===xt||n[1]===yt)?l=l.filter(function(e){return!e.variable}):t>=a&&n[1]===mt&&(l=l.filter(function(e){return!e.position})),!l.length)return ut(e,n||[]);var i=l[oe(l.length)],c={name:i.name,params:i.input.map(function(e){return dt(e[0],e,t+1,r,a,i.type===Ar.blend)})};return!n&&JSON.stringify(c).indexOf(Mt)<0?dt():n?c:{data:c}}function bt(){for(var e=[],n=Object.keys(Hr.generator),t=0;t<n.length;t++){e.push(vt(n[t],n[t]));for(var r=Hr.generator[n[t]].examples||[],a=0;a<r.length;a++)e.push(vt(n[t],n[t],r[a],a+1))}return e}function vt(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=Hr.generator[e],o=["Length","SinX","SinY"],l={title:n?n:void 0,example:r?r.toString():void 0,data:[[e].concat(Pr(t?t:a.params?a.params.filter(function(e){return!e[Lt.placeholder]}).map(function(e){return e[1]===yt?vt(o.shift()):e[2]}):[]))]};return a.scale&&1!==a.scale&&l.data.push(["Scale",[a.scale,a.scale]]),a.normalized===!1&&l.data.push(["Normalize"]),l}function pt(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return JSON.stringify(e,null,n)}function ht(e){return document.querySelector(e)}var gt={BlendHardMix:"blendHardMix",BlendVividLight:"blendVividLight",BlendLinearLight:"blendLinearLight",BlendPinLight:"blendPinLight",BlendGlow:"blendGlow",BlendHardLight:"blendHardLight",BlendPhoenix:"blendPhoenix",BlendOverlay:"blendOverlay",BlendNormal:"blendNormal",BlendNegation:"blendNegation",BlendMultiply:"blendMultiply",BlendReflect:"blendReflect",BlendAverage:"blendAverage",BlendLinearBurn:"blendLinearBurn",BlendLighten:"blendLighten",BlendScreen:"blendScreen",BlendSoftLight:"blendSoftLight",BlendSubtract:"blendSubtract",BlendExclusion:"blendExclusion",BlendDifference:"blendDifference",BlendDarken:"blendDarken",BlendColorDodge:"blendColorDodge",BlendColorBurn:"blendColorBurn",BlendAdd:"blendAdd",BlendLinearDodge:"blendLinearDodge"},mt="POSITION",yt="VALUE",xt="COLOR",wt="coord",Mt="pos",Lt={type:0,name:1,value:2,range:3,placeholder:4,input:5},St="float",Dt="vec3",Ct={params:[["float","weight",1,[-8,8]],["float",yt,1,[-1,1]]]},Tt={params:[["float","wx",1,[-8,8]],["float","wy",1,[-8,8]],["float",yt,1,[-1,1]],["float",yt,1,[-1,1]]]},Nt={params:[["float","angle",0,[0,360]]]},_t={params:[["vec2","scale",[1,1],[-16,16]]]},zt={params:[["vec2","offset",[0,0],[-128,128]]]},Pt={params:[["vec2","size",[0,0],[2,16]],["float","mirrorX",0,[0,1]],["float","mirrorY",0,[0,1]]]},kt={params:[["float","steps",8,[2,128]]]},Ht={params:[["float","weight",8,[-16,16]],["float","size",2,[0,16]],["vec2","offset",[0,0],[0,32]]]},At=Object.freeze({Distort:Ct,Warp:Tt,Rotate:Nt,Scale:_t,Translate:zt,Tile:Pt,Pixelate:kt,Twirl:Ht}),Ft={},Ut={},jt={},Bt={},Et={},Ot={},qt={params:[["float","value",.5,[-2,2]]]},Rt={glsl:"min",params:[["float","value",.5,[-2,2]]]},Yt={glsl:"max",params:[["float","value",.5,[-2,2]]]},It={params:[["float","value",.5,[-2,2]]]},Kt={params:[["float","edge0",0,[-2,2]],["float","edge1",1,[-2,2]]]},Wt={params:[["float","steps",8,[2,32]],["float","gamma",.6,[0,2]]]},Gt={params:[["float","bias",.25,[0,1]]]},Xt={params:[["float","gain",.25,[0,1]]]},Vt={params:[["float","from",0,[-1,1]],["float","to",1,[-1,1]]]},$t=Object.freeze({Normalize:Ft,Denormalize:Ut,Invert:jt,Abs:Bt,Cos:Et,Sin:Ot,Add:qt,Min:Rt,Max:Yt,Multiply:It,SmoothStep:Kt,Posterize:Wt,Bias:Gt,Gain:Xt,Clamp:Vt}),Zt={},Jt={},Qt={},er={scale:16},nr={scale:16},tr={scale:16},rr={scale:256},ar={glsl:"float",position:!1,params:[["float","value",.5,[-1,1]]]},or={glsl:"snoise",normalized:!1},lr={glsl:"checker",params:[["float","repeats",2,[1,128]]]},ir={glsl:"cnoise",normalized:!1,scale:4},cr={glsl:"pnoise",params:[["vec2","size",[16,16],[1,128]]],normalized:!1,scale:4},ur={params:[["float","jitter",1,[0,1]],["float","manhattanDistance",0,[0,1]]],scale:2,examples:[[.5,0],[0,0],[1,1]]},sr={params:[["float","jitter",1,[0,1]],["float","manhattanDistance",0,[0,1]]],scale:2,examples:[[.5,0],[0,0],[1,1]]},fr={params:[["float","jitter",1,[0,1]],["float","manhattanDistance",0,[0,1]]],scale:2,examples:[[.5,0],[0,0],[1,1],[0,1]]},dr={params:[["float","jitter",1,[0,1]],["float","manhattanDistance",0,[0,1]]],scale:2,examples:[[.5,0],[0,0],[1,1]]},br={params:[["float","jitter",1,[0,1]],["float","manhattanDistance",0,[0,1]],["float","multiply",8,[1,32]],["float","divide",2,[1,32]],["float","offset",.5,[0,8]]],scale:2,examples:[[.5,0,8,2,.5],[0,0,8,2,.5],[1,1,8,2,.5],[1,0,32,2,.5],[1,0,32,1,2],[1,0,32,1,4],[1,1,32,1,4],[.25,1,32,1,4]]\n},vr={glsl:"ridgedMultiFractal",params:[["float","H",.25,[0,8]],["float","lacunarity",2,[0,8]],["float","frequency",2,[0,8]],["float","octaves",6,[1,12]],["float","offset",.9,[-2,2]],["float","gain",1.5,[-8,8]]],scale:1,examples:[[.25,4,2,2,1,6],[.25,3,1,6,1,1]]},pr={glsl:"hybridMultiFractal",params:[["float","H",.25,[0,8]],["float","lacunarity",3,[0,8]],["float","frequency",2,[0,8]],["float","octaves",6,[1,12]],["float","offset",.05,[-2,2]]],normalized:!1,scale:1,examples:[[.1,1.5,3,6,0]]},hr={glsl:"heteroTerrainA",params:[["float","H",.5,[.01,3]],["float","lacunarity",2,[1,3]],["float","frequency",2,[1,8]],["float","octaves",6,[1,8]],["float","offset",.05,[-1,1]]],normalized:!1,scale:1,examples:[[2,1.5,3,2,0]]},gr={glsl:"multifractalA",params:[["float","H",.5,[.01,2]],["float","lacunarity",2,[1,2]],["float","frequency",2,[1,8]],["float","octaves",6,[1,8]],["float","offset",.8,[-1,1]],["float","noise",null,null,"snoise",[["vec2",Mt]]]],scale:1,examples:[[1.5,1.5,4,6,.85]]},mr={glsl:"fBmA",params:[["float","H",.5,[0,8]],["float","lacunarity",2,[0,8]],["float","frequency",2,[0,8]],["float","octaves",6,[1,12]]],normalized:!1,scale:1,examples:[[.85,2.5,4,6]]},yr={glsl:"vec3",color:!0,position:!1,params:[["float",yt,1,[0,1]],["float",yt,1,[0,1]],["float",yt,1,[0,1]]]},xr={glsl:"HSV",color:!0,position:!1,params:[["float",yt,1,[0,1]],["float",yt,1,[0,1]],["float",yt,1,[0,1]]]},wr=Object.freeze({X:Zt,Y:Jt,Length:Qt,SinX:er,SinY:nr,SinXY:tr,Xor:rr,Value:ar,SimplexNoise:or,Checker:lr,PerlinNoise:ir,PeriodicNoise:cr,WorleyF1:ur,WorleyF2:sr,WorleyF1F2:fr,WorleyF2F1:dr,WorleyCrackle:br,RidgedMultiFractal:vr,HybridMultiFractal:pr,HeteroTerrain:hr,MultiFractal:gr,FBm:mr,RGB:yr,HSV:xr}),Mr={glsl:"cosPalette",params:[["vec3","a",[.5,.5,.5],[0,1]],["vec3","b",[.5,.5,.5],[0,1]],["vec3","c",[1,1,1],[0,1]],["vec3","d",[0,.33,.67],[0,1]]],examples:[[[.5,.5,.5],[.5,.5,.5],[1,1,1],[0,.33,.67]],[[.5,.5,.5],[.5,.5,.5],[1,1,1],[0,.1,.2]],[[.5,.5,.5],[.5,.5,.5],[1,1,1],[.3,.2,.2]],[[.5,.5,.5],[.5,.5,.5],[1,1,.5],[.8,.9,.3]],[[.5,.5,.5],[.5,.5,.5],[1,.7,.4],[0,.15,.2]],[[.5,.5,.5],[.5,.5,.5],[2,1,0],[.5,.2,.25]],[[.8,.5,.4],[.2,.4,.2],[2,1,1],[0,.25,.25]]]},Lr={color:!0,params:[["vec3","color",[.5,.5,.5],[0,1]]]},Sr=Object.freeze({CosPalette:Mr,Tint:Lr}),Dr={},Cr=Object.freeze({Grayscale:Dr}),Tr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Nr=function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")},_r=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),zr=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},Pr=function(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)},kr={},Hr={blend:gt,transform:At,modify:$t,generator:wr,colorize:Sr,desaturate:Cr},Ar={blend:"blend",transform:"transform",modify:"modify",generator:"generator",colorize:"colorize",desaturate:"desaturate"},Fr=[],Ur={blend:function(){return[{output:"float",input:[["float",yt,.5,[0,1]],["float",yt,.5,[0,1]]]},{output:"float",input:[["float",yt,.5,[0,1]],["float",yt,.5,[0,1]],["float","opacity",.5,[0,1]]]},{output:"vec3",input:[["vec3",xt,[.5,.5,.5],[0,1]],["vec3",xt,[.5,.5,.5],[0,1]]]},{output:"vec3",input:[["vec3",xt,[.5,.5,.5],[0,1]],["vec3",xt,[.5,.5,.5],[0,1]],["float","opacity",.5,[0,1]]]}]},transform:function(e){return[{output:"vec2",input:[["vec2",mt]].concat(Pr(e.params))}]},modify:function(e){return[{output:"float",input:[["float",yt,.5,[-1,1]]].concat(Pr(e.params))},{output:"vec3",input:[["vec3",xt,[.5,.5,.5],[0,1]]].concat(Pr(e.params))}]},generator:function(e){return[{output:e.color?"vec3":"float",input:e.position===!1?e.params:[["vec2",mt]].concat(Pr(e.params))}]},colorize:function(e){return[{output:"vec3",input:[["float",yt,.5,[0,1]]].concat(Pr(e.params))}].concat(Pr(e.color?[{output:"vec3",input:[["vec3",xt,[.5,.5,.5],[0,1]]].concat(Pr(e.params))}]:[]))},desaturate:function(e){return[{output:"float",input:[["vec3",xt,[.5,.5,.5],[0,1]]].concat(Pr(e.params))}]}};a();var jr=l(),Br=function(){function e(t,r){return Nr(this,e),this.onstep=null,this.camera=new n.Camera,this.camera.position.z=1,this.scene=new n.Scene,this.mesh=new n.Mesh(new n.PlaneGeometry(2,2)),this.scene.add(this.mesh),this.renderer=new n.WebGLRenderer({canvas:t,context:r}),this}return _r(e,[{key:"size",value:function(e){return this.renderer.setSize(b(e)?e[0]:e,b(e)?e[1]:e),this}},{key:"shader",value:function(e,t,r){this.uniforms=r,this.original=p(r);var a=this.renderer.getSize();return this.mesh.material=new n.ShaderMaterial({uniforms:zr({},r,{resolution:{value:[a.width,a.height,1]}}),vertexShader:e,fragmentShader:t}),this}},{key:"render",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=v(e,n,f(t));return this.shader(r.vertexShader,r.fragmentShader,t),this.renderer.render(this.scene,this.camera),this}},{key:"update",value:function(){this.renderer.render(this.scene,this.camera),this.onstep&&this.onstep()}},{key:"loop",value:function(){var e=this;this.running&&(this.step(),this.update(),requestAnimationFrame(function(){return e.loop()}))}},{key:"start",value:function(){this.running||(this.running=!0,this.loop())}},{key:"stop",value:function(){this.running=!1}},{key:"reset",value:function(){var e=this;r(this.original,function(n,t){e.uniforms[n].value=p(t.value)}),this.running||this.update()}},{key:"step",value:function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,.01);r(this.uniforms,function(n,t){t.value.length?t.value.forEach(function(n,r){t.K=t.K||[],t.value[r]+=t.K[r]||e,t.value[r]>t.proto[3][1]?(t.K[r]=-e,t.value[r]=t.proto[3][1]):t.value[r]<t.proto[3][0]&&(t.K[r]=e,t.value[r]=t.proto[3][0])}):(t.value+=t.K||e,t.value>t.proto[3][1]?(t.K=-e,t.value=t.proto[3][1]):t.value<t.proto[3][0]&&(t.K=e,t.value=t.proto[3][0]))})}}]),e}(),Er=null,Or={lines:["float blendColorDodge(float base, float blend) {"," return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);","}","float blendColorDodge(float base, float blend, float opacity) {"," return mix(base, blendColorDodge(base, blend), opacity);","}","vec3 blendColorDodge(vec3 base, vec3 blend) {"," return vec3(blendColorDodge(base.r, blend.r), blendColorDodge(base.g, blend.g), blendColorDodge(base.b, blend.b));","}","vec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendColorDodge(base, blend), opacity);","}"]},qr={lines:["float blendColorBurn(float base, float blend) {"," return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);","}","float blendColorBurn(float base, float blend, float opacity) {"," return mix(base, blendColorBurn(base, blend), opacity);","}","vec3 blendColorBurn(vec3 base, vec3 blend) {"," return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g), blendColorBurn(base.b, blend.b));","}","vec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendColorBurn(base, blend), opacity);","}"]},Rr={lines:["float blendVividLight(float base, float blend) {"," return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend)) : blendColorDodge(base, (2.0 * (blend - 0.5)));","}","float blendVividLight(float base, float blend, float opacity) {"," return mix(base, blendVividLight(base, blend), opacity);","}","vec3 blendVividLight(vec3 base, vec3 blend) {"," return vec3(blendVividLight(base.r, blend.r), blendVividLight(base.g, blend.g), blendVividLight(base.b, blend.b));","}","vec3 blendVividLight(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendVividLight(base, blend), opacity);","}"],deps:["blendColorBurn","blendColorDodge"]},Yr={lines:["float blendHardMix(float base, float blend) {"," return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;","}","float blendHardMix(float base, float blend, float opacity) {"," return mix(base, blendHardMix(base, blend), opacity);","}","vec3 blendHardMix(vec3 base, vec3 blend) {"," return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g), blendHardMix(base.b, blend.b));","}","vec3 blendHardMix(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendHardMix(base, blend), opacity);","}"],deps:["blendVividLight"]},Ir={lines:["float blendLinearDodge(float base, float blend) {"," return min(base + blend, 1.0);","}","float blendLinearDodge(float base, float blend, float opacity) {"," return mix(base, blendLinearDodge(base, blend), opacity);","}","vec3 blendLinearDodge(vec3 base, vec3 blend) {"," return min(base + blend, vec3(1.0));","}","vec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendLinearDodge(base, blend), opacity);","}"]},Kr={lines:["float blendLinearBurn(float base, float blend) {"," return max(base + blend - 1.0, 0.0);","}","float blendLinearBurn(float base, float blend, float opacity) {"," return mix(base, blendLinearBurn(base, blend), opacity);","}","vec3 blendLinearBurn(vec3 base, vec3 blend) {"," return max(base + blend - vec3(1.0), vec3(0.0));","}","vec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendLinearBurn(base, blend), opacity);","}"]},Wr={lines:["float blendLinearLight(float base, float blend) {"," return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend)) : blendLinearDodge(base, (2.0 * (blend - 0.5)));","}","float blendLinearLight(float base, float blend, float opacity) {"," return mix(base, blendLinearLight(base, blend), opacity);","}","vec3 blendLinearLight(vec3 base, vec3 blend) {"," return vec3(blendLinearLight(base.r, blend.r), blendLinearLight(base.g, blend.g), blendLinearLight(base.b, blend.b));","}","vec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendLinearLight(base, blend), opacity);","}"],deps:["blendLinearBurn","blendLinearDodge"]},Gr={lines:["float blendLighten(float base, float blend) {"," return max(blend, base);","}","float blendLighten(float base, float blend, float opacity) {"," return mix(base, blendLighten(base, blend), opacity);","}","vec3 blendLighten(vec3 base, vec3 blend) {"," return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g), blendLighten(base.b, blend.b));","}","vec3 blendLighten(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendLighten(base, blend), opacity);","}"]},Xr={lines:["float blendDarken(float base, float blend) {"," return min(blend, base);","}","float blendDarken(float base, float blend, float opacity) {"," return mix(base, blendDarken(base, blend), opacity);","}","vec3 blendDarken(vec3 base, vec3 blend) {"," return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g), blendDarken(base.b, blend.b));","}","vec3 blendDarken(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendDarken(base, blend), opacity);","}"]},Vr={lines:["float blendPinLight(float base, float blend) {"," return (blend < 0.5) ? blendDarken(base, (2.0 * blend)) : blendLighten(base, (2.0 * (blend - 0.5)));","}","float blendPinLight(float base, float blend, float opacity) {"," return mix(base, blendPinLight(base, blend), opacity);","}","vec3 blendPinLight(vec3 base, vec3 blend) {"," return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g), blendPinLight(base.b, blend.b));","}","vec3 blendPinLight(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendPinLight(base, blend), opacity);","}"],deps:["blendDarken","blendLighten"]},$r={lines:["float blendReflect(float base, float blend) {"," return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);","}","float blendReflect(float base, float blend, float opacity) {"," return mix(base, blendReflect(base, blend), opacity);","}","vec3 blendReflect(vec3 base, vec3 blend) {"," return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g), blendReflect(base.b, blend.b));","}","vec3 blendReflect(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendReflect(base, blend), opacity);","}"]},Zr={lines:["float blendGlow(float base, float blend) {"," return blendReflect(blend, base);","}","float blendGlow(float base, float blend, float opacity) {"," return mix(base, blendReflect(blend, base), opacity);","}","vec3 blendGlow(vec3 base, vec3 blend) {"," return blendReflect(blend, base);","}","vec3 blendGlow(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendGlow(base, blend), opacity);","}"],deps:["blendReflect"]},Jr={lines:["float blendOverlay(float base, float blend) {"," return base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));","}","float blendOverlay(float base, float blend, float opacity) {"," return mix(base, blendOverlay(base, blend), opacity);","}","vec3 blendOverlay(vec3 base, vec3 blend) {"," return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g), blendOverlay(base.b, blend.b));","}","vec3 blendOverlay(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendOverlay(base, blend), opacity);","}"]},Qr={lines:["float blendHardLight(float base, float blend) {"," return blendOverlay(blend, base);","}","float blendHardLight(float base, float blend, float opacity) {"," return mix(base, blendHardLight(base, blend), opacity);","}","vec3 blendHardLight(vec3 base, vec3 blend) {"," return blendOverlay(blend, base);","}","vec3 blendHardLight(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendHardLight(base, blend), opacity);","}"],deps:["blendOverlay"]},ea={lines:["float blendPhoenix(float base, float blend) {"," return min(base, blend) - max(base, blend) + 1.0;","}","float blendPhoenix(float base, float blend, float opacity) {"," return mix(base, blendPhoenix(base, blend), opacity);","}","vec3 blendPhoenix(vec3 base, vec3 blend) {"," return min(base, blend) - max(base, blend) + vec3(1.0);","}","vec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendPhoenix(base, blend), opacity);","}"]},na={lines:["float blendNegation(float base, float blend) {"," return 1.0 - abs(1.0 - base - blend);","}","vec3 blendNegation(vec3 base, vec3 blend) {"," return vec3(1.0) - abs(vec3(1.0) - base - blend);","}","float blendNegation(float base, float blend, float opacity) {"," return mix(base, blendNegation(base, blend), opacity);","}","vec3 blendNegation(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendNegation(base, blend), opacity);","}"]},ta={lines:["float blendMultiply(float base, float blend) {"," return base * blend;","}","float blendMultiply(float base, float blend, float opacity) {"," return mix(base, blendMultiply(base, blend), opacity);","}","vec3 blendMultiply(vec3 base, vec3 blend) {"," return base * blend;","}","vec3 blendMultiply(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendMultiply(base, blend), opacity);","}"]},ra={lines:["float blendAverage(float base, float blend) {"," return (base + blend) / 2.0;","}","float blendAverage(float base, float blend, float opacity) {"," return mix(base, blendAverage(base, blend), opacity);","}","vec3 blendAverage(vec3 base, vec3 blend) {"," return (base + blend) / 2.0;","}","vec3 blendAverage(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendAverage(base, blend), opacity);","}"]},aa={lines:["float blendScreen(float base, float blend) {"," return 1.0 - ((1.0 - base) * (1.0 - blend));","}","float blendScreen(float base, float blend, float opacity) {"," return mix(base, blendScreen(base, blend), opacity);","}","vec3 blendScreen(vec3 base, vec3 blend) {"," return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g), blendScreen(base.b, blend.b));","}","vec3 blendScreen(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendScreen(base, blend), opacity);","}"]},oa={lines:["float blendSoftLight(float base, float blend) {"," return (blend < 0.5) ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend)) : (sqrt(abs(base)) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));","}","float blendSoftLight(float base, float blend, float opacity) {"," return mix(base, blendSoftLight(base, blend), opacity);","}","vec3 blendSoftLight(vec3 base, vec3 blend) {"," return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g), blendSoftLight(base.b, blend.b));","}","vec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendSoftLight(base, blend), opacity);","}"]},la={lines:["float blendSubtract(float base, float blend) {"," return max(base + blend - 1.0, 0.0);","}","float blendSubtract(float base, float blend, float opacity) {"," return mix(base, blendSubtract(base, blend), opacity);","}","vec3 blendSubtract(vec3 base, vec3 blend) {"," return max(base + blend - vec3(1.0), vec3(0.0));","}","vec3 blendSubtract(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendSubtract(base, blend), opacity);","}"]},ia={lines:["float blendExclusion(float base, float blend) {"," return base + blend - 2.0 * base * blend;","}","float blendExclusion(float base, float blend, float opacity) {"," return mix(base, blendExclusion(base, blend), opacity);","}","vec3 blendExclusion(vec3 base, vec3 blend) {"," return base + blend - 2.0 * base * blend;","}","vec3 blendExclusion(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendExclusion(base, blend), opacity);","}"]},ca={lines:["float blendDifference(float base, float blend) {"," return abs(base - blend);","}","float blendDifference(float base, float blend, float opacity) {"," return mix(base, blendDifference(base, blend), opacity);","}","vec3 blendDifference(vec3 base, vec3 blend) {"," return abs(base - blend);","}","vec3 blendDifference(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendDifference(base, blend), opacity);","}"]},ua={lines:["float blendAdd(float base, float blend) {"," return min(base + blend, 1.0);","}","float blendAdd(float base, float blend, float opacity) {"," return mix(base, blendAdd(base, blend), opacity);","}","vec3 blendAdd(vec3 base, vec3 blend) {"," return min(base + blend, vec3(1.0));","}","vec3 blendAdd(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendAdd(base, blend), opacity);","}"]},sa={lines:["float blendNormal(float base, float blend) {"," return blend;","}","float blendNormal(float base, float blend, float opacity) {"," return mix(base, blend, opacity);","}","vec3 blendNormal(vec3 base, vec3 blend) {"," return blend;","}","vec3 blendNormal(vec3 base, vec3 blend, float opacity) {"," return mix(base, blendNormal(base, blend), opacity);","}"]},fa={lines:["vec2 Distort(vec2 pos, float weight, float val) {"," return pos + weight * val;","}"]},da={lines:["mat2 rotate(float rad) {"," float c = cos(rad);"," float s = sin(rad);"," return mat2(c, s, -s, c);","}"]},ba={lines:["vec2 Rotate(vec2 pos, float deg) {"," return rotate(radians(deg)) * pos;","}"],deps:["rotate"]},va={lines:["vec2 Scale(vec2 pos, vec2 scale) {"," return pos * scale;","}"]},pa={lines:["vec2 Translate(vec2 pos, vec2 shift) {"," return pos + shift;","}"]},ha={lines:["vec2 Pixelate(vec2 pos, float steps) {"," return floor(pos * steps + 2. / steps) / steps;","}"]},ga={lines:["vec2 Twirl(vec2 pos, float weight, float size, vec2 center) {"," float dist = distance(pos, center);"," if(dist < size) {","  dist = pow(abs(size - dist), 2.) / size;","  float angle = 6.28318530718 * (dist / (size / weight));","  return vec2((pos.x - center.x) * cos(angle) - (pos.y - pos.x) * sin(angle) + center.x + 0.5, (pos.y - center.y) * cos(angle) + (pos.x - pos.y) * sin(angle) + center.y + 0.5);"," } else {","  return pos;"," }","}"]},ma={lines:["vec2 Tile(vec2 pos, vec2 size, float mirrorX, float mirrorY) {"," vec2 n = pos * size;"," return vec2(bool(mirrorX > .5) ? abs(n.x - floor(n.x) - 0.5) * 4. - 1. : (n.x - floor(n.x) - 0.5) * 2., bool(mirrorY > .5) ? abs(n.y - floor(n.y) - 0.5) * 4. - 1. : (n.y - floor(n.y) - 0.5) * 2.);","}"]},ya={lines:["vec2 Warp(vec2 pos, float wx, float wy, float x, float y) {"," return pos + vec2(wx * x, wy * y);","}"]},xa={lines:["float checker(vec2 uv, float repeats) {"," float cx = floor(repeats * uv.x);"," float cy = floor(repeats * uv.y);"," float result = mod(cx + cy, 2.0);"," return sign(result);","}"]},wa={lines:["vec3 mod289_1(vec3 x) {"," return x - floor(x * (1.0 / 289.0)) * 289.0;","}","vec2 mod289_1(vec2 x) {"," return x - floor(x * (1.0 / 289.0)) * 289.0;","}"]},Ma={lines:["vec3 permute_1(vec3 x) {"," return mod289_1(((x * 34.0) + 1.0) * x);","}"],deps:["mod289_1"]},La={lines:["float snoise(vec2 v) {"," const vec4 C = vec4(0.211324865405187, 0.366025403784439, -0.577350269189626, 0.024390243902439);"," vec2 i = floor(v + dot(v, C.yy));"," vec2 x0 = v - i + dot(i, C.xx);"," vec2 i1;"," i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);"," vec4 x12 = x0.xyxy + C.xxzz;"," x12.xy -= i1;"," i = mod289_1(i);"," vec3 p = permute_1(permute_1(i.y + vec3(0.0, i1.y, 1.0)) + i.x + vec3(0.0, i1.x, 1.0));"," vec3 m = max(0.5 - vec3(dot(x0, x0), dot(x12.xy, x12.xy), dot(x12.zw, x12.zw)), 0.0);"," m = m * m;"," m = m * m;"," vec3 x = 2.0 * fract(p * C.www) - 1.0;"," vec3 h = abs(x) - 0.5;"," vec3 ox = floor(x + 0.5);"," vec3 a0 = x - ox;"," m *= 1.79284291400159 - 0.85373472095314 * (a0 * a0 + h * h);"," vec3 g;"," g.x = a0.x * x0.x + h.x * x0.y;"," g.yz = a0.yz * x12.xz + h.yz * x12.yw;"," return 130.0 * dot(m, g);","}"],deps:["mod289_1","permute_1"]},Sa={lines:["float pnoise(vec2 P, vec2 rep) {"," vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);"," vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);"," Pi = mod(Pi, rep.xyxy);"," Pi = mod289_2(Pi);"," vec4 ix = Pi.xzxz;"," vec4 iy = Pi.yyww;"," vec4 fx = Pf.xzxz;"," vec4 fy = Pf.yyww;"," vec4 i = permute_2(permute_2(ix) + iy);"," vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0;"," vec4 gy_0 = abs(gx) - 0.5;"," vec4 tx_0 = floor(gx + 0.5);"," gx = gx - tx_0;"," vec2 g00 = vec2(gx.x, gy_0.x);"," vec2 g10 = vec2(gx.y, gy_0.y);"," vec2 g01 = vec2(gx.z, gy_0.z);"," vec2 g11 = vec2(gx.w, gy_0.w);"," vec4 norm = taylorInvSqrt_1(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));"," g00 *= norm.x;"," g01 *= norm.y;"," g10 *= norm.z;"," g11 *= norm.w;"," float n00 = dot(g00, vec2(fx.x, fy.x));"," float n10 = dot(g10, vec2(fx.y, fy.y));"," float n01 = dot(g01, vec2(fx.z, fy.z));"," float n11 = dot(g11, vec2(fx.w, fy.w));"," vec2 fade_xy = fade_1(Pf.xy);"," vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);"," float n_xy = mix(n_x.x, n_x.y, fade_xy.y);"," return 2.3 * n_xy;","}"],deps:["mod289_2","permute_2","taylorInvSqrt_1","fade_1"]},Da={lines:["vec4 mod289_2(vec4 x) {"," return x - floor(x * (1.0 / 289.0)) * 289.0;","}"]},Ca={lines:["vec4 permute_2(vec4 x) {"," return mod289_2(((x * 34.0) + 1.0) * x);","}"],deps:["mod289_2"]},Ta={lines:["vec4 taylorInvSqrt_1(vec4 r) {"," return 1.79284291400159 - 0.85373472095314 * r;","}"]},Na={lines:["vec2 fade_1(vec2 t) {"," return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);","}"]},_a={lines:["float cnoise(vec2 P) {"," vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);"," vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);"," Pi = mod289_2(Pi);"," vec4 ix = Pi.xzxz;"," vec4 iy = Pi.yyww;"," vec4 fx = Pf.xzxz;"," vec4 fy = Pf.yyww;"," vec4 i = permute_2(permute_2(ix) + iy);"," vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0;"," vec4 gy_1 = abs(gx) - 0.5;"," vec4 tx_1 = floor(gx + 0.5);"," gx = gx - tx_1;"," vec2 g00 = vec2(gx.x, gy_1.x);"," vec2 g10 = vec2(gx.y, gy_1.y);"," vec2 g01 = vec2(gx.z, gy_1.z);"," vec2 g11 = vec2(gx.w, gy_1.w);"," vec4 norm = taylorInvSqrt_1(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));"," g00 *= norm.x;"," g01 *= norm.y;"," g10 *= norm.z;"," g11 *= norm.w;"," float n00 = dot(g00, vec2(fx.x, fy.x));"," float n10 = dot(g10, vec2(fx.y, fy.y));"," float n01 = dot(g01, vec2(fx.z, fy.z));"," float n11 = dot(g11, vec2(fx.w, fy.w));"," vec2 fade_xy = fade_1(Pf.xy);"," vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);"," float n_xy = mix(n_x.x, n_x.y, fade_xy.y);"," return 2.3 * n_xy;","}"],deps:["mod289_2","permute_2","taylorInvSqrt_1","fade_1"]},za={lines:["float SinX(vec2 pos) {"," return (sin(pos.x) + 1.) / 2.;","}"]},Pa={lines:["float SinY(vec2 pos) {"," return (sin(pos.y) + 1.) / 2.;","}"]},ka={lines:["float SinXY(vec2 pos) {"," return (sin(pos.x) + sin(pos.y) + 2.) / 4.;","}"]},Ha={lines:["vec3 permute_3(vec3 x) {"," return mod((34.0 * x + 1.0) * x, 289.0);","}"]},Aa={lines:["vec3 dist_0(vec3 x, vec3 y, bool manhattanDistance) {"," return manhattanDistance ? abs(x) + abs(y) : (x * x + y * y);","}"]},Fa={lines:["vec2 worley(vec2 P, float jitter, bool manhattanDistance) {"," float K = 0.142857142857;"," float Ko = 0.428571428571;"," vec2 Pi_0 = mod(floor(P), 289.0);"," vec2 Pf = fract(P);"," vec3 oi = vec3(-1.0, 0.0, 1.0);"," vec3 of = vec3(-0.5, 0.5, 1.5);"," vec3 px = permute_3(Pi_0.x + oi);"," vec3 p = permute_3(px.x + Pi_0.y + oi);"," vec3 ox = fract(p * K) - Ko;"," vec3 oy = mod(floor(p * K), 7.0) * K - Ko;"," vec3 dx = Pf.x + 0.5 + jitter * ox;"," vec3 dy = Pf.y - of + jitter * oy;"," vec3 d1 = dist_0(dx, dy, manhattanDistance);"," p = permute_3(px.y + Pi_0.y + oi);"," ox = fract(p * K) - Ko;"," oy = mod(floor(p * K), 7.0) * K - Ko;"," dx = Pf.x - 0.5 + jitter * ox;"," dy = Pf.y - of + jitter * oy;"," vec3 d2 = dist_0(dx, dy, manhattanDistance);"," p = permute_3(px.z + Pi_0.y + oi);"," ox = fract(p * K) - Ko;"," oy = mod(floor(p * K), 7.0) * K - Ko;"," dx = Pf.x - 1.5 + jitter * ox;"," dy = Pf.y - of + jitter * oy;"," vec3 d3 = dist_0(dx, dy, manhattanDistance);"," vec3 d1a = min(d1, d2);"," d2 = max(d1, d2);"," d2 = min(d2, d3);"," d1 = min(d1a, d2);"," d2 = max(d1a, d2);"," d1.xy = (d1.x < d1.y) ? d1.xy : d1.yx;"," d1.xz = (d1.x < d1.z) ? d1.xz : d1.zx;"," d1.yz = min(d1.yz, d2.yz);"," d1.y = min(d1.y, d1.z);"," d1.y = min(d1.y, d2.x);"," return sqrt(d1.xy);","}"],deps:["permute_3","dist_0"]},Ua={lines:["float WorleyF1(vec2 pos, float jitter, float manhattanDistance) {"," return worley(pos, jitter, bool(manhattanDistance > .5)).x;","}"],deps:["worley"]},ja={lines:["float WorleyF2(vec2 pos, float jitter, float manhattanDistance) {"," return worley(pos, jitter, bool(manhattanDistance > .5)).y;","}"],deps:["worley"]},Ba={lines:["float WorleyF1F2(vec2 pos, float jitter, float manhattanDistance) {"," vec2 w = worley(pos, jitter, bool(manhattanDistance > .5));"," return (w.x + w.y) / 2.;","}"],deps:["worley"]},Ea={lines:["float WorleyF2F1(vec2 pos, float jitter, float manhattanDistance) {"," vec2 w = worley(pos, jitter, bool(manhattanDistance));"," return w.y - w.x;","}"],deps:["worley"]},Oa={lines:["float WorleyCrackle(vec2 pos, float jitter, float manhattanDistance, float multiply, float reduce, float offset) {"," vec2 w = worley(pos, jitter, bool(manhattanDistance > .5));"," return max(1., (w.y - w.x) * multiply) / reduce - offset;","}"],deps:["worley"]},qa={lines:["float ridgedMultiFractal(vec2 point, float H, float lacunarity, float frequency, float octaves, float offset, float gain) {"," float value = 1.0;"," float signal = 0.0;"," float pwHL = pow(abs(lacunarity), -H);"," float pwr = pwHL;"," float weight = 0.;"," signal = snoise(point * frequency);"," signal = offset - abs(signal);"," signal *= signal;"," value = signal * pwr;"," weight = 1.0;"," pwr *= pwHL;"," for(int i = 1; i < 65535; i++) {","  point *= lacunarity;","  weight = clamp(signal * gain, 0., 1.);","  signal = snoise(point * frequency);","  signal = offset - abs(signal);","  signal *= signal;","  signal *= weight;","  value += signal * pwr;","  pwr *= pwHL;","  if(i == int(octaves) - 1)","   break;","  "," }"," return value;","}"],deps:["snoise"]},Ra={lines:["float hybridMultiFractal(vec2 point, float H, float lacunarity, float frequency, float octaves, float offset) {"," float value = 1.0;"," float signal = 0.0;"," float rmd = 0.0;"," float pwHL = pow(abs(lacunarity), -H);"," float pwr = pwHL;"," float weight = 0.;"," value = pwr * (snoise(point * frequency) + offset);"," weight = value;"," point *= lacunarity;"," pwr *= pwHL;"," for(int i = 1; i < 65535; i++) {","  weight = weight > 1. ? 1. : weight;","  signal = pwr * (snoise(point * frequency) + offset);","  value += weight * signal;","  weight *= signal;","  pwr *= pwHL;","  point *= lacunarity;","  if(i == int(octaves) - 1)","   break;","  "," }"," rmd = octaves - floor(octaves);"," if(rmd != 0.0)","  value += (rmd * snoise(point * frequency) * pwr);"," return value;","}"],deps:["snoise"]},Ya={lines:["float fBmA(vec2 point, float H, float lacunarity, float frequency, float octaves) {"," float value = 0.0;"," float remainder = 0.0;"," float pwrHL = pow(abs(lacunarity), -H);"," float pwr = 1.0;"," for(int i = 0; i < 65535; i++) {","  value += snoise(point * frequency) * pwr;","  pwr *= pwrHL;","  point *= lacunarity;","  if(i == int(octaves) - 1)","   break;","  "," }"," remainder = octaves - floor(octaves);"," if(remainder != 0.0) {","  value += remainder * snoise(point * frequency) * pwr;"," }"," return value;","}"],deps:["snoise"]},Ia={lines:["float heteroTerrainA(vec2 point, float H, float lacunarity, float frequency, float octaves, float offset) {"," float value, increment, remainder;"," float pwrHL = pow(abs(lacunarity), -H);"," float pwr = pwrHL;"," value = offset + snoise(point * frequency);"," point *= lacunarity;"," for(int i = 1; i < 65535; i++) {","  increment = (snoise(point * frequency) + offset) * pwr * value;","  value += increment;","  point *= lacunarity;","  if(i == int(octaves))","   break;","  "," }"," remainder = mod(octaves, floor(octaves));"," if(remainder != 0.0) {","  increment = (snoise(point * frequency) + offset) * pwr * value;","  value += remainder * increment;"," }"," return value;","}"],deps:["snoise"]},Ka={lines:["float multifractalA(vec2 point, float H, float lacunarity, float frequency, float octaves, float offset) {"," float value = 1.0;"," float rmd = 0.0;"," float pwHL = pow(abs(lacunarity), -H);"," float pwr = 1.0;"," for(int i = 0; i < 65535; i++) {","  value *= pwr * snoise(point * frequency) + offset;","  pwr *= pwHL;","  point *= lacunarity;","  if(i == int(octaves) - 1)","   break;","  "," }"," rmd = octaves - floor(octaves);"," if(rmd != 0.0)","  value += (rmd * snoise(point * frequency) * pwr);"," return value;","}"],deps:["snoise"]},Wa={lines:["vec3 HSV(float h, float s, float v) {"," vec3 c = vec3(h, s, v);"," vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);"," vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);"," return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);","}"]},Ga={lines:["float Xor(vec2 pos) {"," vec4 o = vec4(0.);"," for(float i = 0.; i < 8.; ++i) {","  o.xy = ceil(mod(pos /= 2., 2.));","  o -= o - o.z - abs(o.y - o.x) * i / 32.;"," }"," return o.x;","}"]},Xa={lines:["float X(vec2 pos) {"," return pos.x;","}"]},Va={lines:["float Y(vec2 pos) {"," return pos.y;","}"]},$a={lines:["float Length(vec2 pos) {"," return length(pos);","}"]},Za={lines:["float Abs(float val) {"," return abs(val);","}","vec3 Abs(vec3 val) {"," return abs(val);","}"]},Ja={lines:["float Posterize(float val, float steps, float gamma) {"," return pow(abs(floor(pow(abs(val), gamma) * steps) / steps), 1.0 / gamma);","}","vec3 Posterize(vec3 val, float steps, float gamma) {"," return pow(abs(floor(pow(abs(val), vec3(gamma)) * steps) / steps), vec3(1.0 / gamma));","}"]},Qa={lines:["float Bias(float val, float bias) {"," return (val / ((((1. / bias) - 2.) * (1. - val)) + 1.));","}","vec3 Bias(vec3 val, float bias) {"," return (val / ((((1. / bias) - 2.) * (1. - val)) + 1.));","}"]},eo={lines:["float Gain(float val, float gain) {"," if(val < 0.5) {","  return Bias(val * 2., gain) / 2.;"," } else {","  return Bias(val * 2. - 1., 1. - gain) / 2. + 0.5;"," }","}","vec3 Gain(vec3 val, float gain) {"," return vec3(Gain(val.x, gain), Gain(val.y, gain), Gain(val.z, gain));","}"],\ndeps:["Bias"]},no={lines:["float Normalize(float val) {"," return (val + 1.) / 2.;","}","vec3 Normalize(vec3 val) {"," return (val + 1.) / 2.;","}"]},to={lines:["float Denormalize(float val) {"," return (val - .5) * 2.;","}","vec3 Denormalize(vec3 val) {"," return (val - .5) * 2.;","}"]},ro={lines:["float Invert(float val) {"," return 1. - val;","}","vec3 Invert(vec3 val) {"," return 1. - val;","}"]},ao={lines:["float Clamp(float val, float from, float to) {"," return clamp(val, from, to);","}","vec3 Clamp(vec3 val, float from, float to) {"," return clamp(val, from, to);","}"]},oo={lines:["float Sin(float val) {"," return sin(val);","}","vec3 Sin(vec3 val) {"," return sin(val);","}"]},lo={lines:["float Cos(float val) {"," return cos(val);","}","vec3 Cos(vec3 val) {"," return cos(val);","}"]},io={lines:["float Add(float val, float value) {"," return val + value;","}","vec3 Add(vec3 val, float value) {"," return val + value;","}"]},co={lines:["float Multiply(float val, float value) {"," return val * value;","}","vec3 Multiply(vec3 val, float value) {"," return val * value;","}"]},uo={lines:["float SmoothStep(float val, float edge0, float edge1) {"," return smoothstep(edge0, edge1, val);","}","vec3 SmoothStep(vec3 val, float edge0, float edge1) {"," return smoothstep(edge0, edge1, val);","}"]},so={lines:["vec3 cosPalette(float t, vec3 a, vec3 b, vec3 c, vec3 d) {"," return a + b * cos(6.28318 * (c * t + d));","}"]},fo={lines:["vec3 Tint(float val, vec3 color) {"," return val * color;","}","vec3 Tint(vec3 val, vec3 color) {"," return val * color;","}"]},bo={lines:["float Grayscale(vec3 color) {"," return color.x * .2126 + color.y * .7152 + color.z * .0722;","}"]},vo={blendColorDodge:Or,blendColorBurn:qr,blendVividLight:Rr,blendHardMix:Yr,blendLinearDodge:Ir,blendLinearBurn:Kr,blendLinearLight:Wr,blendLighten:Gr,blendDarken:Xr,blendPinLight:Vr,blendReflect:$r,blendGlow:Zr,blendOverlay:Jr,blendHardLight:Qr,blendPhoenix:ea,blendNegation:na,blendMultiply:ta,blendAverage:ra,blendScreen:aa,blendSoftLight:oa,blendSubtract:la,blendExclusion:ia,blendDifference:ca,blendAdd:ua,blendNormal:sa,Distort:fa,rotate:da,Rotate:ba,Scale:va,Translate:pa,Pixelate:ha,Twirl:ga,Tile:ma,Warp:ya,checker:xa,mod289_1:wa,permute_1:Ma,snoise:La,pnoise:Sa,mod289_2:Da,permute_2:Ca,taylorInvSqrt_1:Ta,fade_1:Na,cnoise:_a,SinX:za,SinY:Pa,SinXY:ka,permute_3:Ha,dist_0:Aa,worley:Fa,WorleyF1:Ua,WorleyF2:ja,WorleyF1F2:Ba,WorleyF2F1:Ea,WorleyCrackle:Oa,ridgedMultiFractal:qa,hybridMultiFractal:Ra,fBmA:Ya,heteroTerrainA:Ia,multifractalA:Ka,HSV:Wa,Xor:Ga,X:Xa,Y:Va,Length:$a,Abs:Za,Posterize:Ja,Bias:Qa,Gain:eo,Normalize:no,Denormalize:to,Invert:ro,Clamp:ao,Sin:oo,Cos:lo,Add:io,Multiply:co,SmoothStep:uo,cosPalette:so,Tint:fo,Grayscale:bo},po={INLINE:0,UNIFORM:1,DEFINE:2},ho={UNKNOWN:-1,GRAPH:0,TREE:1,SYNTAX:2},go=function(e,n){return e=null==e?0:+e,n=null==n?1:+n,1===arguments.length?(n=e,e=0):n-=e,function(){return Math.random()*n+e}},mo=function(e,n){return e<n?-1:e>n?1:e>=n?0:NaN},yo=function(e){return 1===e.length&&(e=le(e)),{left:function(n,t,r,a){for(null==r&&(r=0),null==a&&(a=n.length);r<a;){var o=r+a>>>1;e(n[o],t)<0?r=o+1:a=o}return r},right:function(n,t,r,a){for(null==r&&(r=0),null==a&&(a=n.length);r<a;){var o=r+a>>>1;e(n[o],t)>0?a=o:r=o+1}return r}}},xo=yo(mo),wo=xo.right,Mo=function(e,n,t){e=+e,n=+n,t=(a=arguments.length)<2?(n=e,e=0,1):a<3?1:+t;for(var r=-1,a=0|Math.max(0,Math.ceil((n-e)/t)),o=new Array(a);++r<a;)o[r]=e+r*t;return o},Lo=Math.sqrt(50),So=Math.sqrt(10),Do=Math.sqrt(2),Co=function(e,n,t){var r=ie(e,n,t);return Mo(Math.ceil(e/r)*r,Math.floor(n/r)*r+r/2,r)},To="$";ce.prototype=ue.prototype={constructor:ce,has:function(e){return To+e in this},get:function(e){return this[To+e]},set:function(e,n){return this[To+e]=n,this},remove:function(e){var n=To+e;return n in this&&delete this[n]},clear:function(){for(var e in this)e[0]===To&&delete this[e]},keys:function e(){var e=[];for(var n in this)n[0]===To&&e.push(n.slice(1));return e},values:function e(){var e=[];for(var n in this)n[0]===To&&e.push(this[n]);return e},entries:function e(){var e=[];for(var n in this)n[0]===To&&e.push({key:n.slice(1),value:this[n]});return e},size:function e(){var e=0;for(var n in this)n[0]===To&&++e;return e},empty:function(){for(var e in this)if(e[0]===To)return!1;return!0},each:function(e){for(var n in this)n[0]===To&&e(this[n],n.slice(1),this)}};var No=ue.prototype;se.prototype=fe.prototype={constructor:se,has:No.has,add:function(e){return e+="",this[To+e]=e,this},remove:No.remove,clear:No.clear,values:No.keys,size:No.size,empty:No.empty,each:No.each};var _o=Array.prototype,zo=_o.map,Po=_o.slice,ko=function(e,n,t){e.prototype=n.prototype=t,t.constructor=e},Ho=.7,Ao=1/Ho,Fo="\\\\s*([+-]?\\\\d+)\\\\s*",Uo="\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*",jo="\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*",Bo=/^#([0-9a-f]{3})$/,Eo=/^#([0-9a-f]{6})$/,Oo=new RegExp("^rgb\\\\("+[Fo,Fo,Fo]+"\\\\)$"),qo=new RegExp("^rgb\\\\("+[jo,jo,jo]+"\\\\)$"),Ro=new RegExp("^rgba\\\\("+[Fo,Fo,Fo,Uo]+"\\\\)$"),Yo=new RegExp("^rgba\\\\("+[jo,jo,jo,Uo]+"\\\\)$"),Io=new RegExp("^hsl\\\\("+[Uo,jo,jo]+"\\\\)$"),Ko=new RegExp("^hsla\\\\("+[Uo,jo,jo,Uo]+"\\\\)$"),Wo={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};ko(be,ve,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),ko(ye,me,de(be,{brighter:function(e){return e=null==e?Ao:Math.pow(Ao,e),new ye(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?Ho:Math.pow(Ho,e),new ye(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var e=this.opacity;return e=isNaN(e)?1:Math.max(0,Math.min(1,e)),(1===e?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}})),ko(Le,Me,de(be,{brighter:function(e){return e=null==e?Ao:Math.pow(Ao,e),new Le(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?Ho:Math.pow(Ho,e),new Le(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),n=isNaN(e)||isNaN(this.s)?0:this.s,t=this.l,r=t+(t<.5?t:1-t)*n,a=2*t-r;return new ye(Se(e>=240?e-240:e+120,a,r),Se(e,a,r),Se(e<120?e+240:e-120,a,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Go=Math.PI/180,Xo=180/Math.PI,Vo=18,$o=.95047,Zo=1,Jo=1.08883,Qo=4/29,el=6/29,nl=3*el*el,tl=el*el*el;ko(Te,Ce,de(be,{brighter:function(e){return new Te(this.l+Vo*(null==e?1:e),this.a,this.b,this.opacity)},darker:function(e){return new Te(this.l-Vo*(null==e?1:e),this.a,this.b,this.opacity)},rgb:function(){var e=(this.l+16)/116,n=isNaN(this.a)?e:e+this.a/500,t=isNaN(this.b)?e:e-this.b/200;return e=Zo*_e(e),n=$o*_e(n),t=Jo*_e(t),new ye(ze(3.2404542*n-1.5371385*e-.4985314*t),ze(-.969266*n+1.8760108*e+.041556*t),ze(.0556434*n-.2040259*e+1.0572252*t),this.opacity)}})),ko(Ae,He,de(be,{brighter:function(e){return new Ae(this.h,this.c,this.l+Vo*(null==e?1:e),this.opacity)},darker:function(e){return new Ae(this.h,this.c,this.l-Vo*(null==e?1:e),this.opacity)},rgb:function(){return De(this).rgb()}}));var rl=-.14861,al=1.78277,ol=-.29227,ll=-.90649,il=1.97294,cl=il*ll,ul=il*al,sl=al*ol-ll*rl;ko(je,Ue,de(be,{brighter:function(e){return e=null==e?Ao:Math.pow(Ao,e),new je(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?Ho:Math.pow(Ho,e),new je(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*Go,n=+this.l,t=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(e),a=Math.sin(e);return new ye(255*(n+t*(rl*r+al*a)),255*(n+t*(ol*r+ll*a)),255*(n+t*(il*r)),this.opacity)}}));var fl=function(e){return function(){return e}},dl=function e(n){function t(e,n){var t=r((e=me(e)).r,(n=me(n)).r),a=r(e.g,n.g),o=r(e.b,n.b),l=Re(e.opacity,n.opacity);return function(n){return e.r=t(n),e.g=a(n),e.b=o(n),e.opacity=l(n),e+""}}var r=qe(n);return t.gamma=e,t}(1),bl=function(e,n){var t,r=n?n.length:0,a=e?Math.min(r,e.length):0,o=new Array(r),l=new Array(r);for(t=0;t<a;++t)o[t]=xl(e[t],n[t]);for(;t<r;++t)l[t]=n[t];return function(e){for(t=0;t<a;++t)l[t]=o[t](e);return l}},vl=function(e,n){var t=new Date;return e=+e,n-=e,function(r){return t.setTime(e+n*r),t}},pl=function(e,n){return e=+e,n-=e,function(t){return e+n*t}},hl=function(e,n){var t,r={},a={};null!==e&&"object"===("undefined"==typeof e?"undefined":Tr(e))||(e={}),null!==n&&"object"===("undefined"==typeof n?"undefined":Tr(n))||(n={});for(t in n)t in e?r[t]=xl(e[t],n[t]):a[t]=n[t];return function(e){for(t in r)a[t]=r[t](e);return a}},gl=/[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,ml=new RegExp(gl.source,"g"),yl=function(e,n){var t,r,a,o=gl.lastIndex=ml.lastIndex=0,l=-1,i=[],c=[];for(e+="",n+="";(t=gl.exec(e))&&(r=ml.exec(n));)(a=r.index)>o&&(a=n.slice(o,a),i[l]?i[l]+=a:i[++l]=a),(t=t[0])===(r=r[0])?i[l]?i[l]+=r:i[++l]=r:(i[++l]=null,c.push({i:l,x:pl(t,r)})),o=ml.lastIndex;return o<n.length&&(a=n.slice(o),i[l]?i[l]+=a:i[++l]=a),i.length<2?c[0]?Ie(c[0].x):Ye(n):(n=c.length,function(e){for(var t,r=0;r<n;++r)i[(t=c[r]).i]=t.x(e);return i.join("")})},xl=function(e,n){var t,r="undefined"==typeof n?"undefined":Tr(n);return null==n||"boolean"===r?fl(n):("number"===r?pl:"string"===r?(t=ve(n))?(n=t,dl):yl:n instanceof ve?dl:n instanceof Date?vl:Array.isArray(n)?bl:isNaN(n)?hl:pl)(e,n)},wl=function(e,n){return e=+e,n-=e,function(t){return Math.round(e+n*t)}};Ke(Oe);var Ml,Ll=Ke(Re),Sl=function(e){return function(){return e}},Dl=function(e){return+e},Cl=[0,1],Tl=function(e,n){if((t=(e=n?e.toExponential(n-1):e.toExponential()).indexOf("e"))<0)return null;var t,r=e.slice(0,t);return[r.length>1?r[0]+r.slice(2):r,+e.slice(t+1)]},Nl=function(e){return e=Tl(Math.abs(e)),e?e[1]:NaN},_l=function(e,n){return function(t,r){for(var a=t.length,o=[],l=0,i=e[0],c=0;a>0&&i>0&&(c+i+1>r&&(i=Math.max(1,r-c)),o.push(t.substring(a-=i,a+i)),!((c+=i+1)>r));)i=e[l=(l+1)%e.length];return o.reverse().join(n)}},zl=function(e,n){e=e.toPrecision(n);e:for(var t,r=e.length,a=1,o=-1;a<r;++a)switch(e[a]){case".":o=t=a;break;case"0":0===o&&(o=a),t=a;break;case"e":break e;default:o>0&&(o=0)}return o>0?e.slice(0,o)+e.slice(t+1):e},Pl=function(e,n){var t=Tl(e,n);if(!t)return e+"";var r=t[0],a=t[1],o=a-(Ml=3*Math.max(-8,Math.min(8,Math.floor(a/3))))+1,l=r.length;return o===l?r:o>l?r+new Array(o-l+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+Tl(e,Math.max(0,n+o-1))[0]},kl=function(e,n){var t=Tl(e,n);if(!t)return e+"";var r=t[0],a=t[1];return a<0?"0."+new Array(-a).join("0")+r:r.length>a+1?r.slice(0,a+1)+"."+r.slice(a+1):r+new Array(a-r.length+2).join("0")},Hl={"":zl,"%":function(e,n){return(100*e).toFixed(n)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:function(e){return Math.round(e).toString(10)},e:function(e,n){return e.toExponential(n)},f:function(e,n){return e.toFixed(n)},g:function(e,n){return e.toPrecision(n)},o:function(e){return Math.round(e).toString(8)},p:function(e,n){return kl(100*e,n)},r:kl,s:Pl,X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}},Al=/^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i,Fl=function(e){return new Qe(e)};Qe.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var Ul,jl,Bl,El=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],Ol=function(e){function n(e){function n(e){var n,a,c,m=v,y=p;if("c"===b)y=h(e)+y,e="";else{e=+e;var x=(e<0||1/e<0)&&(e*=-1,!0);if(e=h(e,d),x)for(n=-1,a=e.length,x=!1;++n<a;)if(c=e.charCodeAt(n),48<c&&c<58||"x"===b&&96<c&&c<103||"X"===b&&64<c&&c<71){x=!0;break}if(m=(x?"("===i?i:"-":"-"===i||"("===i?"":i)+m,y=y+("s"===b?El[8+Ml/3]:"")+(x&&"("===i?")":""),g)for(n=-1,a=e.length;++n<a;)if(c=e.charCodeAt(n),48>c||c>57){y=(46===c?o+e.slice(n+1):e.slice(n))+y,e=e.slice(0,n);break}}f&&!u&&(e=r(e,1/0));var w=m.length+e.length+y.length,M=w<s?new Array(s-w+1).join(t):"";switch(f&&u&&(e=r(M+e,M.length?s-y.length:1/0),M=""),l){case"<":return m+e+y+M;case"=":return m+M+e+y;case"^":return M.slice(0,w=M.length>>1)+m+e+y+M.slice(w)}return M+m+e+y}e=Fl(e);var t=e.fill,l=e.align,i=e.sign,c=e.symbol,u=e.zero,s=e.width,f=e.comma,d=e.precision,b=e.type,v="$"===c?a[0]:"#"===c&&/[boxX]/.test(b)?"0"+b.toLowerCase():"",p="$"===c?a[1]:/[%p]/.test(b)?"%":"",h=Hl[b],g=!b||/[defgprs%]/.test(b);return d=null==d?b?6:12:/[gprs]/.test(b)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),n.toString=function(){return e+""},n}function t(e,t){var r=n((e=Fl(e),e.type="f",e)),a=3*Math.max(-8,Math.min(8,Math.floor(Nl(t)/3))),o=Math.pow(10,-a),l=El[8+a/3];return function(e){return r(o*e)+l}}var r=e.grouping&&e.thousands?_l(e.grouping,e.thousands):en,a=e.currency,o=e.decimal;return{format:n,formatPrefix:t}};nn({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var ql=function(e){return Math.max(0,-Nl(Math.abs(e)))},Rl=function(e,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Nl(n)/3)))-Nl(Math.abs(e)))},Yl=function(e,n){return e=Math.abs(e),n=Math.abs(n)-e,Math.max(0,Nl(n)-Nl(e))+1},Il=function(e,n,t){var r,a=e[0],o=e[e.length-1],l=ie(a,o,null==n?10:n);switch(t=Fl(null==t?",f":t),t.type){case"s":var i=Math.max(Math.abs(a),Math.abs(o));return null!=t.precision||isNaN(r=Rl(l,i))||(t.precision=r),Bl(t,i);case"":case"e":case"g":case"p":case"r":null!=t.precision||isNaN(r=Yl(l,Math.max(Math.abs(a),Math.abs(o))))||(t.precision=r-("e"===t.type));break;case"f":case"%":null!=t.precision||isNaN(r=ql(l))||(t.precision=r-2*("%"===t.type))}return jl(t)},Kl=new Date,Wl=new Date,Gl=an(function(){},function(e,n){e.setTime(+e+n)},function(e,n){return n-e});Gl.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?an(function(n){n.setTime(Math.floor(n/e)*e)},function(n,t){n.setTime(+n+t*e)},function(n,t){return(t-n)/e}):Gl:null};var Xl=1e3,Vl=6e4,$l=36e5,Zl=864e5,Jl=6048e5,Ql=(an(function(e){e.setTime(Math.floor(e/Xl)*Xl)},function(e,n){e.setTime(+e+n*Xl)},function(e,n){return(n-e)/Xl},function(e){return e.getUTCSeconds()}),an(function(e){e.setTime(Math.floor(e/Vl)*Vl)},function(e,n){e.setTime(+e+n*Vl)},function(e,n){return(n-e)/Vl},function(e){return e.getMinutes()}),an(function(e){var n=e.getTimezoneOffset()*Vl%$l;n<0&&(n+=$l),e.setTime(Math.floor((+e-n)/$l)*$l+n)},function(e,n){e.setTime(+e+n*$l)},function(e,n){return(n-e)/$l},function(e){return e.getHours()}),an(function(e){e.setHours(0,0,0,0)},function(e,n){e.setDate(e.getDate()+n)},function(e,n){return(n-e-(n.getTimezoneOffset()-e.getTimezoneOffset())*Vl)/Zl},function(e){return e.getDate()-1})),ei=on(0),ni=on(1),ti=(on(2),on(3),on(4),on(5),on(6),an(function(e){e.setDate(1),e.setHours(0,0,0,0)},function(e,n){e.setMonth(e.getMonth()+n)},function(e,n){return n.getMonth()-e.getMonth()+12*(n.getFullYear()-e.getFullYear())},function(e){return e.getMonth()}),an(function(e){e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,n){e.setFullYear(e.getFullYear()+n)},function(e,n){return n.getFullYear()-e.getFullYear()},function(e){return e.getFullYear()}));ti.every=function(e){return isFinite(e=Math.floor(e))&&e>0?an(function(n){n.setFullYear(Math.floor(n.getFullYear()/e)*e),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,t){n.setFullYear(n.getFullYear()+t*e)}):null};var ri=(an(function(e){e.setUTCSeconds(0,0)},function(e,n){e.setTime(+e+n*Vl)},function(e,n){return(n-e)/Vl},function(e){return e.getUTCMinutes()}),an(function(e){e.setUTCMinutes(0,0,0)},function(e,n){e.setTime(+e+n*$l)},function(e,n){return(n-e)/$l},function(e){return e.getUTCHours()}),an(function(e){e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCDate(e.getUTCDate()+n)},function(e,n){return(n-e)/Zl},function(e){return e.getUTCDate()-1})),ai=ln(0),oi=ln(1),li=(ln(2),ln(3),ln(4),ln(5),ln(6),an(function(e){e.setUTCDate(1),e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCMonth(e.getUTCMonth()+n)},function(e,n){return n.getUTCMonth()-e.getUTCMonth()+12*(n.getUTCFullYear()-e.getUTCFullYear())},function(e){return e.getUTCMonth()}),an(function(e){e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,n){e.setUTCFullYear(e.getUTCFullYear()+n)},function(e,n){return n.getUTCFullYear()-e.getUTCFullYear()},function(e){return e.getUTCFullYear()}));li.every=function(e){return isFinite(e=Math.floor(e))&&e>0?an(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/e)*e),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,t){n.setUTCFullYear(n.getUTCFullYear()+t*e)}):null};var ii,ci,ui,si,fi,di={"-":"",_:" ",0:"0"},bi=/^\\s*\\d+/,vi=/^%/,pi=/[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;ot({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var hi="%Y-%m-%dT%H:%M:%S.%LZ",gi=(Date.prototype.toISOString?lt:si(hi),+new Date("2000-01-01T00:00:00.000Z")?it:fi(hi),function(e){return e.match(/.{6}/g).map(function(e){return"#"+e})});gi("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),gi("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"),gi("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"),gi("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5"),Ll(Ue(300,.5,0),Ue(-240,.5,1));var mi=(Ll(Ue(-100,.75,.35),Ue(80,1.5,.8)),Ll(Ue(260,.75,.35),Ue(80,1.5,.8)),Ue(),function(e,n){var t,r;return e=null==e?0:+e,n=null==n?1:+n,function(){var a;if(null!=t)a=t,t=null;else do t=2*Math.random()-1,a=2*Math.random()-1,r=t*t+a*a;while(!r||r>1);return e+n*a*Math.sqrt(-2*Math.log(r)/r)}});e.features=Hr,e.types=Ar,e.all=jr,e.getSignature=i,e.Renderer=Br,e.compile=J,e.valueToGraph=Q,e.formatShader=te,e.getShaderThree=v,e.getShaderGlslSandbox=re,e.getShaderShadertoy=ae,e.getLib=F,e.getUniforms=f,e.getDefines=ee,e.generatorRandomPalette=ft,e.generatorRandomTree=dt,e.generatorGenerators=bt,e.deep=p,e.toJson=pt,e.select=ht,Object.defineProperty(e,"__esModule",{value:!0})});\n'},"P+fo":function(e,n){e.exports=function(e){"undefined"!=typeof execScript?execScript(e):eval.call(null,e)}},YeKH:function(e,n,t){t("P+fo")(t("ilz3"))},ilz3:function(e,n){e.exports="/*!\n* screenfull\n* v3.0.0 - 2015-11-24\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\t\tvar valLength;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// new WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0, valLength = val.length; i < valLength; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\telem = elem || document.documentElement;\n\n\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t// Browser sniffing, since the alternative with\n\t\t\t// setTimeout is even worse.\n\t\t\tif (/5\\.1[\\.\\d]* Safari/.test(navigator.userAgent)) {\n\t\t\t\telem[request]();\n\t\t\t} else {\n\t\t\t\telem[request](keyboardAllowed && Element.ALLOW_KEYBOARD_INPUT);\n\t\t\t}\n\t\t},\n\t\texit: function () {\n\t\t\tdocument[fn.exitFullscreen]();\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\tif (this.isFullscreen) {\n\t\t\t\tthis.exit();\n\t\t\t} else {\n\t\t\t\tthis.request(elem);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n"},rByv:function(e,n,t){t("P+fo")(t("8GmU"))},"s+8i":function(e,n){e.exports='(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.CJSON=f()}})(function(){var define,module,exports;module={exports:exports={}};function stringify(obj,options){options=options||{};var indent=JSON.stringify([1],null,get(options,"indent",2)).slice(2,-3);var maxLength=indent===""?Infinity:get(options,"maxLength",80);return function _stringify(obj,currentIndent,reserved){if(obj&&typeof obj.toJSON==="function"){obj=obj.toJSON()}var string=JSON.stringify(obj);if(string===undefined){return string}var length=maxLength-currentIndent.length-reserved;if(string.length<=length){var prettified=prettify(string);if(prettified.length<=length){return prettified}}if(typeof obj==="object"&&obj!==null){var nextIndent=currentIndent+indent;var items=[];var delimiters;var comma=function(array,index){return index===array.length-1?0:1};if(Array.isArray(obj)){for(var index=0;index<obj.length;index++){items.push(_stringify(obj[index],nextIndent,comma(obj,index))||"null")}delimiters="[]"}else{Object.keys(obj).forEach(function(key,index,array){var keyPart=JSON.stringify(key)+": ";var value=_stringify(obj[key],nextIndent,keyPart.length+comma(array,index));if(value!==undefined){items.push(keyPart+value)}});delimiters="{}"}if(items.length>0){return[delimiters[0],indent+items.join(",\\n"+nextIndent),delimiters[1]].join("\\n"+currentIndent)}}return string}(obj,"",0)}var stringOrChar=/("(?:[^"]|\\\\.)*")|[:,]/g;function prettify(string){return string.replace(stringOrChar,function(match,string){return string?match:match+" "})}function get(options,name,defaultValue){return name in options?options[name]:defaultValue}module.exports=stringify;return module.exports});\n'},tLGE:function(e,n,t){t("P+fo")(t("s+8i"))}},[3]);